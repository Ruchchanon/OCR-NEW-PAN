[{"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\index.js":"1","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\App.js":"2","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\reducer\\index.js":"3","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\auth\\Login.js":"4","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\Home.js":"5","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\auth\\Register.js":"6","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\reducer\\userReducer.js":"7","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\Navbar.js":"8","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\RealAdminNav.js":"9","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\HomeAdmin.js":"10","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\AdminDashboard.js":"11","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\AdminCreatePerson.js":"12","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\auth.js":"13","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\DocUpload.js":"14","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\HomeUser.js":"15","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\UserRoute.js":"16","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\AdminRoute.js":"17","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\upload\\Upload.js":"18","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\Layout.jsx":"19","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\Upload1.jsx":"20","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\Sidebar.jsx":"21","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\UpForm11.js":"22","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\person.js":"23","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\ocr.js":"24","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\UserSide.js":"25","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\User.js":"26","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\UpForm33.js":"27","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\UpForm22.js":"28","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\UpForm2.js":"29","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\UpForm3.js":"30","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\Inobj.js":"31","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\UpForm4.js":"32","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\UpForm44.js":"33","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\Inplan.js":"34","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\UpForm5.js":"35","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\UpForm55.js":"36","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\Inreso.js":"37","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\UpForm6.js":"38","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\Inedu.js":"39","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\UpForm66.js":"40","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\UpForm7.js":"41","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\Inplace.js":"42","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\UpForm8.js":"43","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\UpForm77.js":"44","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\Inmoney.js":"45","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\Inres.js":"46","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\Insubj.js":"47","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\UpForm9.js":"48","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\UpForm10.js":"49","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\UpForm88.js":"50","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\Inale.js":"51","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\UpForm99.js":"52","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\UpForm100.js":"53","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\UpForm11.js":"54","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\Inrul.js":"55","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\UpForm111.js":"56","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\LoadingToRedirect.js":"57","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Inrul.js":"58","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Inale.js":"59","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Inplace.js":"60","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Inedu.js":"61","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Insubj.js":"62","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Inreso.js":"63","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Inplan.js":"64","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Inobj.js":"65","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Inres.js":"66","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Inmoney.js":"67","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outperson.js":"68","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Header\\HeaderTop.js":"69","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SideBars.js":"70","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\SearchBox\\SearchBox.js":"71","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\Layout.jsx":"72","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\header\\Header.jsx":"73","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inres.js":"74","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inobj.js":"75","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inmoney.js":"76","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inplan.js":"77","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inreso.js":"78","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Card\\Cards.js":"79","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Card\\CardPost.js":"80","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Card\\Cards.js":"81","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Card\\CardPost.js":"82","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SubMenu.js":"83","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SideBarData.js":"84","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Card\\Cards.js":"85","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Card\\CardPost.js":"86","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Card\\Cards.js":"87","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Card\\CardPost.js":"88","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\insubj.js":"89","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\Sidebar.jsx":"90","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Card\\Cards.js":"91","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Card\\CardPost.js":"92","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\RealAdminNav.js":"93","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inedu.js":"94","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Card\\CardPost.js":"95","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Card\\Cards.js":"96","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Card\\Cards.js":"97","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\header\\HeaderUp.jsx":"98","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\menu.config.js":"99","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\navItem\\NavItem.jsx":"100","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\navItem\\NavItemHeader.jsx":"101","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Card\\CardPost.js":"102","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inplace.js":"103","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inale.js":"104","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Card\\Cards.js":"105","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Card\\CardPost.js":"106","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Card\\Cards.js":"107","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Card\\CardPost.js":"108","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inrul.js":"109","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outrul.js":"110","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Card\\Cards.js":"111","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Card\\CardPost.js":"112","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outsubj.js":"113","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outale.js":"114","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outplace.js":"115","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outres.js":"116","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outmoney.js":"117","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outedu.js":"118","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outreso.js":"119","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outplan.js":"120","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outobj.js":"121","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\menu.config.js":"122","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\navItem\\NavItem.jsx":"123","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\CardPost.js":"124","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\Cards.js":"125","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\NewCardDatas.js":"126","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\CardDatas.js":"127","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\navItem\\NavItemHeader.jsx":"128","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\summary\\Summary.js":"129","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\summary.js":"130"},{"size":835,"mtime":1645979528266,"results":"131","hashOfConfig":"132"},{"size":2125,"mtime":1645979528190,"results":"133","hashOfConfig":"132"},{"size":188,"mtime":1645979528490,"results":"134","hashOfConfig":"132"},{"size":6524,"mtime":1645979528381,"results":"135","hashOfConfig":"132"},{"size":156,"mtime":1645979528291,"results":"136","hashOfConfig":"132"},{"size":3544,"mtime":1645979528385,"results":"137","hashOfConfig":"132"},{"size":295,"mtime":1645979528491,"results":"138","hashOfConfig":"132"},{"size":1630,"mtime":1645979528270,"results":"139","hashOfConfig":"132"},{"size":1748,"mtime":1645981230595,"results":"140","hashOfConfig":"132"},{"size":4910,"mtime":1646328170796,"results":"141","hashOfConfig":"132"},{"size":8416,"mtime":1645979528295,"results":"142","hashOfConfig":"132"},{"size":9588,"mtime":1645979528293,"results":"143","hashOfConfig":"132"},{"size":738,"mtime":1645979528237,"results":"144","hashOfConfig":"132"},{"size":6055,"mtime":1645979528296,"results":"145","hashOfConfig":"132"},{"size":1735,"mtime":1645979528392,"results":"146","hashOfConfig":"132"},{"size":451,"mtime":1645979528234,"results":"147","hashOfConfig":"132"},{"size":1037,"mtime":1646328508131,"results":"148","hashOfConfig":"132"},{"size":0,"mtime":1645979528389,"results":"149","hashOfConfig":"132"},{"size":583,"mtime":1645979528269,"results":"150","hashOfConfig":"132"},{"size":7660,"mtime":1645979528300,"results":"151","hashOfConfig":"132"},{"size":414,"mtime":1645979528281,"results":"152","hashOfConfig":"132"},{"size":8423,"mtime":1645979528299,"results":"153","hashOfConfig":"132"},{"size":630,"mtime":1645979528264,"results":"154","hashOfConfig":"132"},{"size":239,"mtime":1645979528249,"results":"155","hashOfConfig":"132"},{"size":9128,"mtime":1645979528394,"results":"156","hashOfConfig":"132"},{"size":8343,"mtime":1645979528393,"results":"157","hashOfConfig":"132"},{"size":8160,"mtime":1645979528319,"results":"158","hashOfConfig":"132"},{"size":8289,"mtime":1645979528315,"results":"159","hashOfConfig":"132"},{"size":10325,"mtime":1645979528314,"results":"160","hashOfConfig":"132"},{"size":10198,"mtime":1645979528318,"results":"161","hashOfConfig":"132"},{"size":7621,"mtime":1645979528316,"results":"162","hashOfConfig":"132"},{"size":10198,"mtime":1645979528331,"results":"163","hashOfConfig":"132"},{"size":8165,"mtime":1645979528332,"results":"164","hashOfConfig":"132"},{"size":7629,"mtime":1645979528325,"results":"165","hashOfConfig":"132"},{"size":10205,"mtime":1645979528327,"results":"166","hashOfConfig":"132"},{"size":10212,"mtime":1645979528328,"results":"167","hashOfConfig":"132"},{"size":7619,"mtime":1645979528334,"results":"168","hashOfConfig":"132"},{"size":10205,"mtime":1645979528336,"results":"169","hashOfConfig":"132"},{"size":7625,"mtime":1645979528307,"results":"170","hashOfConfig":"132"},{"size":10212,"mtime":1645979528337,"results":"171","hashOfConfig":"132"},{"size":10188,"mtime":1645979528309,"results":"172","hashOfConfig":"132"},{"size":7628,"mtime":1645979528321,"results":"173","hashOfConfig":"132"},{"size":10202,"mtime":1645979528322,"results":"174","hashOfConfig":"132"},{"size":8157,"mtime":1645979528310,"results":"175","hashOfConfig":"132"},{"size":7644,"mtime":1645979528312,"results":"176","hashOfConfig":"132"},{"size":7619,"mtime":1645979528329,"results":"177","hashOfConfig":"132"},{"size":7623,"mtime":1645979528344,"results":"178","hashOfConfig":"132"},{"size":10195,"mtime":1645979528345,"results":"179","hashOfConfig":"132"},{"size":10188,"mtime":1645979528304,"results":"180","hashOfConfig":"132"},{"size":10209,"mtime":1645979528323,"results":"181","hashOfConfig":"132"},{"size":7625,"mtime":1645979528302,"results":"182","hashOfConfig":"132"},{"size":8164,"mtime":1645979528347,"results":"183","hashOfConfig":"132"},{"size":8156,"mtime":1645979528305,"results":"184","hashOfConfig":"132"},{"size":10188,"mtime":1645979528341,"results":"185","hashOfConfig":"132"},{"size":7617,"mtime":1645979528339,"results":"186","hashOfConfig":"132"},{"size":8154,"mtime":1645979528342,"results":"187","hashOfConfig":"132"},{"size":804,"mtime":1645979528233,"results":"188","hashOfConfig":"132"},{"size":8575,"mtime":1645979528478,"results":"189","hashOfConfig":"132"},{"size":8575,"mtime":1645979528403,"results":"190","hashOfConfig":"132"},{"size":8581,"mtime":1645979528444,"results":"191","hashOfConfig":"132"},{"size":8575,"mtime":1645979528412,"results":"192","hashOfConfig":"132"},{"size":8578,"mtime":1645979528486,"results":"193","hashOfConfig":"132"},{"size":8578,"mtime":1645979528469,"results":"194","hashOfConfig":"132"},{"size":8578,"mtime":1645979528453,"results":"195","hashOfConfig":"132"},{"size":8575,"mtime":1645979528435,"results":"196","hashOfConfig":"132"},{"size":8575,"mtime":1645979528461,"results":"197","hashOfConfig":"132"},{"size":8654,"mtime":1645979528425,"results":"198","hashOfConfig":"132"},{"size":648,"mtime":1645979528256,"results":"199","hashOfConfig":"132"},{"size":1436,"mtime":1645979528211,"results":"200","hashOfConfig":"132"},{"size":1765,"mtime":1645979528228,"results":"201","hashOfConfig":"132"},{"size":364,"mtime":1645979528221,"results":"202","hashOfConfig":"132"},{"size":585,"mtime":1645979528349,"results":"203","hashOfConfig":"132"},{"size":498,"mtime":1645979528279,"results":"204","hashOfConfig":"132"},{"size":614,"mtime":1645979528245,"results":"205","hashOfConfig":"132"},{"size":614,"mtime":1645979528242,"results":"206","hashOfConfig":"132"},{"size":627,"mtime":1645979528241,"results":"207","hashOfConfig":"132"},{"size":620,"mtime":1645979528244,"results":"208","hashOfConfig":"132"},{"size":620,"mtime":1645979528247,"results":"209","hashOfConfig":"132"},{"size":456,"mtime":1645979528460,"results":"210","hashOfConfig":"132"},{"size":2223,"mtime":1645979528459,"results":"211","hashOfConfig":"132"},{"size":456,"mtime":1645979528434,"results":"212","hashOfConfig":"132"},{"size":2223,"mtime":1645979528432,"results":"213","hashOfConfig":"132"},{"size":1966,"mtime":1645979528230,"results":"214","hashOfConfig":"132"},{"size":3572,"mtime":1645979528226,"results":"215","hashOfConfig":"132"},{"size":456,"mtime":1645979528423,"results":"216","hashOfConfig":"132"},{"size":2273,"mtime":1645979528422,"results":"217","hashOfConfig":"132"},{"size":456,"mtime":1645979528452,"results":"218","hashOfConfig":"132"},{"size":2200,"mtime":1645979528451,"results":"219","hashOfConfig":"132"},{"size":620,"mtime":1645979528248,"results":"220","hashOfConfig":"132"},{"size":414,"mtime":1645979528359,"results":"221","hashOfConfig":"132"},{"size":456,"mtime":1645979528468,"results":"222","hashOfConfig":"132"},{"size":2226,"mtime":1645979528467,"results":"223","hashOfConfig":"132"},{"size":1593,"mtime":1646325836608,"results":"224","hashOfConfig":"132"},{"size":614,"mtime":1645979528240,"results":"225","hashOfConfig":"132"},{"size":2226,"mtime":1645979528484,"results":"226","hashOfConfig":"132"},{"size":456,"mtime":1645979528485,"results":"227","hashOfConfig":"132"},{"size":456,"mtime":1645979528411,"results":"228","hashOfConfig":"132"},{"size":628,"mtime":1645979528357,"results":"229","hashOfConfig":"132"},{"size":1632,"mtime":1645982161603,"results":"230","hashOfConfig":"132"},{"size":640,"mtime":1645979528363,"results":"231","hashOfConfig":"132"},{"size":2146,"mtime":1645979528364,"results":"232","hashOfConfig":"132"},{"size":2223,"mtime":1645979528410,"results":"233","hashOfConfig":"132"},{"size":626,"mtime":1645979528243,"results":"234","hashOfConfig":"132"},{"size":614,"mtime":1645979528239,"results":"235","hashOfConfig":"132"},{"size":456,"mtime":1645979528443,"results":"236","hashOfConfig":"132"},{"size":2229,"mtime":1645979528442,"results":"237","hashOfConfig":"132"},{"size":457,"mtime":1645979528402,"results":"238","hashOfConfig":"132"},{"size":2224,"mtime":1645979528401,"results":"239","hashOfConfig":"132"},{"size":614,"mtime":1645979528247,"results":"240","hashOfConfig":"132"},{"size":620,"mtime":1645979528262,"results":"241","hashOfConfig":"132"},{"size":457,"mtime":1645979528477,"results":"242","hashOfConfig":"132"},{"size":2224,"mtime":1645979528476,"results":"243","hashOfConfig":"132"},{"size":626,"mtime":1645979528263,"results":"244","hashOfConfig":"132"},{"size":620,"mtime":1645979528252,"results":"245","hashOfConfig":"132"},{"size":632,"mtime":1645979528258,"results":"246","hashOfConfig":"132"},{"size":620,"mtime":1645979528260,"results":"247","hashOfConfig":"132"},{"size":633,"mtime":1645979528254,"results":"248","hashOfConfig":"132"},{"size":620,"mtime":1645979528253,"results":"249","hashOfConfig":"132"},{"size":626,"mtime":1645979528261,"results":"250","hashOfConfig":"132"},{"size":626,"mtime":1645979528259,"results":"251","hashOfConfig":"132"},{"size":620,"mtime":1645979528255,"results":"252","hashOfConfig":"132"},{"size":1531,"mtime":1645982139134,"results":"253","hashOfConfig":"132"},{"size":640,"mtime":1645979528284,"results":"254","hashOfConfig":"132"},{"size":2278,"mtime":1645979528205,"results":"255","hashOfConfig":"132"},{"size":469,"mtime":1645979528207,"results":"256","hashOfConfig":"132"},{"size":208,"mtime":1645979528208,"results":"257","hashOfConfig":"132"},{"size":54901,"mtime":1645979528202,"results":"258","hashOfConfig":"132"},{"size":2146,"mtime":1645979528285,"results":"259","hashOfConfig":"132"},{"size":38238,"mtime":1646843083525,"results":"260","hashOfConfig":"132"},{"size":19444,"mtime":1646842949767,"results":"261","hashOfConfig":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"265"},"3l18qx",{"filePath":"266","messages":"267","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"265"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"265"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"265"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"265"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"265"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"265"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"265"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"265"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"265"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"265"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"265"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"265"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"265"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"265"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"265"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"265"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"265"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"265"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"265"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"265"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"265"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"265"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"265"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"265"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"265"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"265"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"265"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"265"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"265"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"265"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"265"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"265"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"265"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"265"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"265"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"265"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"265"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"265"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"265"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"265"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"265"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"265"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"265"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"265"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"265"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"265"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"265"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"265"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"265"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"265"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"265"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"265"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"265"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"265"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"265"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"265"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"466","usedDeprecatedRules":"265"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"265"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"265"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"265"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"265"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"265"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"265"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"265"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"265"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"265"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"265"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"265"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"265"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"265"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"265"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"265"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"265"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"265"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\index.js",["599"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport Login from './pages/auth/Login';\r\n\r\n\r\n//redux\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer/index';\r\n\r\n//css\r\nimport 'antd/dist/antd.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/semantic-ui-calendar-react@latest/dist/umd/semantic-ui-calendar-react.js\"></script>\r\n\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n",["600","601"],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\App.js",["602","603","604","605","606","607","608","609"],"import React, { useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport Layout from './layout/Layout';\r\n\r\n\r\nimport RealAdminNav from './layout/RealAdminNav';\r\nimport Navbar from \"./layout/Navbar\";\r\nimport Home  from \"./pages/Home\";\r\n\r\n//Redux\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// Router\r\nimport { Switch, Route } from 'react-router-dom';\r\n//Pages\r\nimport Login from \"./pages/auth/Login\";\r\nimport Register from \"./pages/auth/Register\";\r\n\r\n//Admin\r\nimport AdminDashboard from './pages/admin/AdminDashboard';\r\nimport DocUpload  from './pages/admin/DocUpload';\r\nimport AdminCreatePerson from './pages/admin/AdminCreatePerson';\r\nimport HomeAdmin from './pages/admin/HomeAdmin';\r\nimport Upload1 from './pages/admin/Upload1';\r\n\r\n\r\n//User\r\nimport HomeUser from \"./pages/user/HomeUser\";\r\n\r\n//function\r\nimport { currentUser } from './functions/auth';\r\n\r\n\r\n//Route\r\nimport UserRoute from './components/routes/UserRoute';\r\nimport AdminRoute from './components/routes/AdminRoute';\r\n\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  //const idTokenResult = localStorage.token;\r\n  //console.log('APP.js', idTokenResult)\r\n\r\n  useEffect(() => {\r\n    const idTokenResult = localStorage.token;\r\n    if (idTokenResult){\r\n      currentUser(idTokenResult)\r\n        .then(res => {\r\n          console.log(res.data)\r\n          dispatch({\r\n            type:'LOGGED_IN_USER',\r\n            payload:{\r\n              name: res.data.name,\r\n              role: res.data.role,\r\n              token: idTokenResult\r\n            }\r\n          })\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n    \r\n  }, [dispatch])\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n      \r\n      <ToastContainer autoClose={5000}/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/Register\" component={Register} />\r\n        \r\n        <AdminRoute exact path=\"/admin/upload1\" component={HomeAdmin} />\r\n        <UserRoute exact path=\"/search\" component={HomeUser} />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\reducer\\index.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\auth\\Login.js",["610","611","612","613","614","615","616","617","618","619","620","621","622","623"],"import { useDispatch } from 'react-redux';\r\nimport React, { Component , useState } from 'react';\r\nimport  Upload  from '../upload/Upload'\r\nimport ButtonGroup2 from '@mui/material/ButtonGroup';\r\nimport Button2 from '@mui/material/Button';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, \r\n    Input,  \r\n    Row,\r\n    Col,\r\n    Card,\r\n    Label,\r\n    Layout,\r\n    Button\r\n} from 'antd';\r\nimport \"./login.css\";\r\nimport styled from 'styled-components';\r\nimport { loginHandler } from '../../functions/auth';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Login = ({ history }) => {\r\n    const [status, setStatus] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const roleBaseRedirect = (role, button) => {\r\n        if(role === 'admin') {\r\n            history.push('/admin/upload1')\r\n            toast.success('เข้าสู่ระบบสำเร็จ')\r\n        }else if(role === 'user'){\r\n            history.push('/search')\r\n            toast.success('เข้าสู่ระบบสำเร็จ')\r\n        } else {\r\n            toast.error('กรุณาเข้าสู่ระบบ')\r\n        }  \r\n    }\r\n\r\n\r\n    const onFinish = (values) => {\r\n        \r\n            values = Object.assign(values, status)\r\n            \r\n            console.log(values,status);\r\n            loginHandler(values)\r\n            .then(res => {\r\n                dispatch({\r\n                    type:'LOGGED_IN_USER',\r\n                    payload:{\r\n                        token: res.data.token,\r\n                        name: res.data.payload.user.name,\r\n                        role: res.data.payload.user.role,\r\n                        button: res.data.payload.user.button\r\n                    }\r\n                })\r\n                localStorage.setItem('token',res.data.token)\r\n                roleBaseRedirect(res.data.payload.user.role, res.data.payload.user.button)\r\n                console.log(res.data.payload.user.role)\r\n                \r\n                //alert(res.data)\r\n                //history.push('/login')\r\n            }).catch(err => {\r\n                toast.error('กรุณาเข้าสู่ระบบ')\r\n                console.log(err.response.data)\r\n                //alert(err.response.data)\r\n            })\r\n          \r\n        };\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    const onChangeTwiceButton = (e) => {\r\n            const o =  { button : e.target.value }\r\n        setStatus(o)\r\n        //setStatus(e.target.value);\r\n    }\r\n\r\n        return(\r\n            <div className=\"container-center-horizontal\">\r\n                <div className=\"desktop-14 screen\">\r\n                    <div className=\"overlap-group2\" >\r\n                        <h1 className=\"text-6 db-heavent-bold-midnight-blue-36px\">\r\n                        ระบบสืบค้นเอกสารอัติโนมัติ วิทยาลัยการคอมพิวเตอร์\r\n                        </h1>\r\n                        <div> \r\n                        <img src={require('../../layout/components/Img/CS.jpg').default} alt=\"CS image\" className=\"Logo\" />\r\n                        </div>\r\n                        <Form                \r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 8,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        >\r\n\r\n\r\n                        <div className=\"group-3542 db-heavent-regular-normal-black-20px border-1px-bon-jour\">\r\n                            \r\n                            <div className=\"frame-36255\">\r\n                                <img\r\n                                    className=\"bxbxs-lock\"\r\n                                />\r\n                                   \r\n                                <div className=\"text-5 db-heavent-bold-midnight-blue-36px\">\r\n                                เข้าสู่ระบบ\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div className=\"group-username\">\r\n                                \r\n                            <Form.Item\r\n                                label={ \r\n                                    <div className=\"text-1\">ชื่อผู้ใช้</div>\r\n                                    }\r\n                                name=\"name\"\r\n                                rules={[\r\n                                {\r\n                                    message: 'Please input your username!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                                \r\n                                \r\n                            </div>\r\n                            \r\n\r\n                            \r\n                            <div className=\"group-password\">\r\n                            <Form.Item\r\n                                label={ \r\n                                    <div className=\"text-1\">พาสเวิร์ด</div>\r\n                                    }\r\n                                name=\"password\"\r\n                                rules={[\r\n                                {\r\n                                    message: 'Please input your password!',\r\n                                },\r\n                                ]}\r\n                            >\r\n                                <Input.Password />\r\n                            </Form.Item>\r\n                            </div>\r\n                            \r\n\r\n\r\n                            <button \r\n                                className=\"ant-btn-primary\"\r\n                                htmlType=\"submit\"\r\n                            >เข้าสู่ระบบ</button>\r\n                            \r\n                            \r\n                        </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n\r\n        );\r\n  \r\n    }\r\n\r\n\r\n\r\nexport default Login;","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\Home.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\auth\\Register.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\reducer\\userReducer.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\Navbar.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\RealAdminNav.js",["624","625","626","627","628","629","630","631"],"import React from 'react'\r\nimport './realadminnav.css' \r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n// Router\r\nimport { Switch, Route } from 'react-router-dom';\r\n//Pages\r\nimport Login from '../pages/auth/Login';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction RealAdminNav() {\r\n    const { user } = useSelector((state) =>  ({ ...state }))\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const logout = () => {\r\n        dispatch({\r\n          type: 'LOGOUT',\r\n          payload: null\r\n        })\r\n        history.push('/')\r\n        toast.success('Logout Success')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Route exact path=\"/\" component={Login} />\r\n            <div className =\"Header3\">\r\n                    <div> \r\n                        <img src={require('./components/Img/CS.jpg').default} alt=\"CS image\" className=\"Logo\" />\r\n                    </div>\r\n                    <div className =\"HeadTextNav\">\r\n                    </div>\r\n\r\n                    {user && (\r\n                        <>\r\n                            <div className =\"StatusLoginText\"><UserOutlined />{user.name}</div>\r\n                            <a className=\"LogoutButton\" onClick={logout}>ออกจากระบบ</a>\r\n                        </>\r\n                        \r\n                    )}\r\n\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RealAdminNav\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\HomeAdmin.js",["632"],"import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\nimport AdminDashboard from './AdminDashboard'\r\nimport Layout from './layout/Layout';\r\nimport Upload1 from './Upload1';\r\nimport Upload11 from './UpForm11';\r\nimport Inmoney from './inmoney/Inmoney';\r\nimport UpForm2 from './inmoney/UpForm2'\r\nimport UpForm22 from './inmoney/UpForm22'\r\nimport UpForm3 from './inobj/UpForm3';\r\nimport UpForm33 from './inobj/UpForm33';\r\nimport InObject from './inobj/Inobj';\r\nimport InRes from './inres/Inres';\r\nimport UpForm4 from './inres/UpForm4';\r\nimport UpForm44 from './inres/UpForm44';\r\nimport InPlan from './inplan/Inplan';\r\nimport UpForm5 from './inplan/UpForm5';\r\nimport UpForm55 from './inplan/UpForm55';\r\nimport InReso from './inreso/Inreso';\r\nimport UpForm6 from './inreso/UpForm6';\r\nimport UpForm66 from './inreso/UpForm66';\r\nimport InEdu from './inedu/Inedu';\r\nimport UpForm7 from './inedu/UpForm7';\r\nimport UpForm77 from './inedu/UpForm77';\r\nimport InPlace from './inplace/Inplace';\r\nimport UpForm8 from './inplace/UpForm8';\r\nimport UpForm88 from './inplace/UpForm88';\r\nimport InSubj from './insubj/Insubj';\r\nimport UpForm9 from './insubj/UpForm9';\r\nimport UpForm99 from './insubj/UpForm99';\r\nimport InAle from './inale/Inale';\r\nimport UpForm10 from './inale/UpForm10';\r\nimport UpForm100 from './inale/UpForm100';\r\nimport InRul from './inrul/Inrul';\r\nimport UpForm11 from './inrul/UpForm11';\r\nimport UpForm111 from './inrul/UpForm111';\r\nimport Summary from './summary/Summary';\r\nimport AdminRoute from '../../components/routes/AdminRoute';\r\n\r\n\r\n\r\n\r\nconst HomeAdmin = () => {\r\n    return (\r\n        <div>\r\n            \r\n            <Router>\r\n            <Layout>\r\n                    <Switch>\r\n                        <Route path=\"/admin/upload1\" exact component= {Upload1} />\r\n                        <Route path=\"/admin/upload1/upfrom\" exact component= {AdminDashboard} />\r\n                        <Route path=\"/admin/upload1/upfrom2\" exact component= {Upload11} />\r\n                        <Route path=\"/admin/upload2\" exact component= {Inmoney} />\r\n                        <Route path=\"/admin/upload2/upfrom\" exact component= {UpForm2} />\r\n                        <Route path=\"/admin/upload2/upfrom2\" exact component= {UpForm22} />\r\n                        <Route path=\"/admin/upload3\" exact component= {InObject} />\r\n                        <Route path=\"/admin/upload3/upfrom\" exact component= {UpForm3} />\r\n                        <Route path=\"/admin/upload3/upfrom2\" exact component= {UpForm33} />\r\n                        <Route path=\"/admin/upload4\" exact component= {InRes} />\r\n                        <Route path=\"/admin/upload4/upfrom\" exact component= {UpForm4} />\r\n                        <Route path=\"/admin/upload4/upfrom2\" exact component= {UpForm44} />\r\n                        <Route path=\"/admin/upload5\" exact component= {InPlan} />\r\n                        <Route path=\"/admin/upload5/upfrom\" exact component= {UpForm5} />\r\n                        <Route path=\"/admin/upload5/upfrom2\" exact component= {UpForm55} />\r\n                        <Route path=\"/admin/upload6\" exact component= {InReso} />\r\n                        <Route path=\"/admin/upload6/upfrom\" exact component= {UpForm6} />\r\n                        <Route path=\"/admin/upload6/upfrom2\" exact component= {UpForm66} />\r\n                        <Route path=\"/admin/upload7\" exact component= {InEdu} />\r\n                        <Route path=\"/admin/upload7/upfrom\" exact component= {UpForm7} />\r\n                        <Route path=\"/admin/upload7/upfrom2\" exact component= {UpForm77} />\r\n                        <Route path=\"/admin/upload8\" exact component= {InPlace} />\r\n                        <Route path=\"/admin/upload8/upfrom\" exact component= {UpForm8} />\r\n                        <Route path=\"/admin/upload8/upfrom2\" exact component= {UpForm88} />\r\n                        <Route path=\"/admin/upload9\" exact component= {InSubj} />\r\n                        <Route path=\"/admin/upload9/upfrom\" exact component= {UpForm9} />\r\n                        <Route path=\"/admin/upload9/upfrom2\" exact component= {UpForm99} />\r\n                        <Route path=\"/admin/upload10\" exact component= {InAle} />\r\n                        <Route path=\"/admin/upload10/upfrom\" exact component= {UpForm10} />\r\n                        <Route path=\"/admin/upload10/upfrom2\" exact component= {UpForm100} />\r\n                        <Route path=\"/admin/upload11\" exact component= {InRul} />\r\n                        <Route path=\"/admin/upload11/upfrom\" exact component= {UpForm11} />\r\n                        <Route path=\"/admin/upload11/upfrom2\" exact component= {UpForm111} />\r\n\r\n                        <Route path=\"/admin/summary\" exact component= { Summary } />\r\n                    </Switch>\r\n            </Layout>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeAdmin\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\AdminDashboard.js",["633","634","635","636","637","638","639","640","641","642","643","644","645","646"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"./upload.css\";\r\nimport { createPerson, getPerson, removePerson } from '../../functions/person';\r\nimport { ocrBeforeUpload } from '../../functions/ocr';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to);\r\n\r\n\r\n        console.log({dateFirst});\r\n\r\n\r\n\r\n        \r\n        createPerson(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removePerson(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    \r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                                defaultValue={dateFirst}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                                defaultValue={numTo}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                                defaultValue={locate}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                                defaultValue={dateGen}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                                defaultValue={from}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                                defaultValue={to}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                defaultValue={name}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\AdminCreatePerson.js",["647","648","649","650"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"./upload.css\";\r\n\r\nimport { createPerson, getPerson, removePerson } from '../../functions/person';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\n\r\n\r\nconst AdminCreatePerson = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState('');\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n        \r\n        createPerson(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removePerson(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขส่งออก',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <a className=\"button-field-download\"  href={`http://localhost:5000/uploads/${record.pic}`}   download={`http://localhost:5000/uploads/${record.pic}`}>\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </a>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <Avatar \r\n                        src={<Image src={`http://localhost:5000/uploads/${record.pic}`}  />}  \r\n                    />\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    return (\r\n        \r\n        <div >\r\n            \r\n            <div>\r\n                <div className=\"col-md-2\">\r\n                  \r\n                </div>\r\n                <div className=\"col\">\r\n                \r\n                  \r\n                    <form onSubmit={onSubmit}>\r\n                    <div className=\"custom-file mb-4\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"custom-file-input\" \r\n                                onChange={(e) => setFile(e.target.files[0])}                  \r\n                            />\r\n                         \r\n                            <label className=\"custom-file-label\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                <div className=\"col\">\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>เลขส่งออก</label>\r\n                            <input type=\"number\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"form-group\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n\r\n\r\n\r\n                        </div>\r\n\r\n               </div>\r\n\r\n                       \r\n\r\n\r\n                    \r\n                        <hr />\r\n\r\n                        <button className=\"btn btn-outline-primary\">เพิ่ม</button>\r\n                    </form>\r\n                    <hr />\r\n                    \r\n                    <Table columns={columns} dataSource={person} rowKey=\"_id\" className=\"upload-table\"/>\r\n                 \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCreatePerson\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\auth.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\DocUpload.js",["651","652","653","654","655","656","657","658","659","660"],"import React, { useState } from 'react';\r\nimport { Row,\r\n         Form, \r\n         Input, \r\n         Button, \r\n         Checkbox, \r\n         Col, \r\n         Card, \r\n         DatePicker, \r\n         InputNumber,\r\n         Divider,\r\n         Upload,\r\n         message\r\n\r\n} from 'antd';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DocUpload = () => {\r\n    const [file, setFile] = useState('');\r\n    const [filename, setFilename] = useState('Choose File');\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    const { user } = useSelector((state) => ({ ...state }));\r\n    console.log('user', user);\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    const onFinish = (values) => {\r\n        \r\n        //const formData = new FormData();\r\n        //formData.append('file', file);\r\n       // formData.append('name', values)\r\n        console.log('Success:',values);\r\n\r\n/*        uploadData(formData, user.token)\r\n            .then( res => {\r\n                console.log(res);\r\n            }).catch( err => {\r\n                console.log(err);\r\n            })\r\n*/\r\n    };\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n\r\n    <>  \r\n        <Row justify=\"center\">\r\n            <Card>\r\n\r\n                \r\n                <div className=\"custom-file mb-4\">\r\n                    <input\r\n                        type=\"file\"\r\n                        className=\"custome-file-input\"                   \r\n                    />\r\n                    <label className=\"custom-file-label\"\r\n                        htmlFor=\"customfile\"\r\n                    >\r\n                        {filename}\r\n                    </label>\r\n\r\n                    <button className=\"btn btn-outline-primary\"></button>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    \r\n\r\n                    <Form.Item\r\n                        label=\"เลขรับ\"\r\n                        name=\"ulInID\"\r\n                       \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                            ]}\r\n                    >\r\n                        <Input type=\"number\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"วันที่\"\r\n                        name=\"ulDate\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'กรุณากรอกวันที่!',\r\n                            },\r\n                            ]}\r\n                    >\r\n                        <DatePicker />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"ที่\"\r\n                        name=\"ulLocate\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'ระบุที่',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"ลงวันที่\"\r\n                        name=\"ulDateGen\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                        ]}\r\n                >\r\n                        <DatePicker />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"จาก\"\r\n                        name=\"ulFrom\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"ระบุจาก\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"ถึง\"\r\n                        name=\"ulTo\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"ระบุถึง\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"เรื่อง\"\r\n                        name=\"ulTitle\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'ระบุเรื่อง',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                                        \r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                                offset: 3,\r\n                                span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n\r\n            </Card>\r\n        </Row>\r\n    </>             \r\n        \r\n    );\r\n}\r\n\r\nexport default DocUpload;\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\HomeUser.js",["661","662"],"import React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\nimport './homeuser.css';\r\nimport User from './User';\r\nimport Sidebar from '../../components/UserComponent/Sidebar/SideBars';\r\nimport UserSide from './UserSide';\r\nimport HeaderTop from '../../components/UserComponent/Header/HeaderTop';\r\nimport Layout from '../../layout/Layout';\r\nimport inmoney from './inmoney/Inmoney';\r\nimport inobj from './inobj/Inobj'\r\nimport inres from './inres/Inres';\r\nimport inplan from './inplan/Inplan';\r\nimport inreso from './inreso/Inreso';\r\nimport inedu from './inedu/Inedu';\r\nimport inplace from './inplace/Inplace';\r\nimport insubj from './insubj/Insubj';\r\nimport inale from './inale/Inale';\r\nimport inrul from './inrul/Inrul';\r\n\r\n\r\n\r\nconst HomeUser = () => {\r\n    return (\r\n       <div>\r\n        <Router>\r\n        <Layout>\r\n        <Switch>\r\n          <Route path=\"/search\" exact component= {User} />\r\n          <Route path=\"/search1\" exact component= {UserSide} />\r\n          <Route path=\"/search2\" exact component= {inmoney} />\r\n          <Route path=\"/search3\" exact component= {inobj} />\r\n          <Route path=\"/search4\" exact component= {inres} />\r\n          <Route path=\"/search5\" exact component= {inplan} />\r\n          <Route path=\"/search6\" exact component= {inreso} />\r\n          <Route path=\"/search7\" exact component= {inedu} />\r\n          <Route path=\"/search8\" exact component= {inplace} />\r\n          <Route path=\"/search9\" exact component= {insubj} />\r\n          <Route path=\"/search10\" exact component= {inale} />\r\n          <Route path=\"/search11\" exact component= {inrul} />\r\n        </Switch>\r\n        </Layout>\r\n      </Router>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default HomeUser\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\UserRoute.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\AdminRoute.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\upload\\Upload.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\Layout.jsx",["663"],"import React from 'react';\r\nimport style from './layout.module.css';\r\nimport Sidebar from './components/sidebar/Sidebar.jsx';\r\nimport Header from './components/header/Header';\r\nimport RealAdminNav from './RealAdminNav';\r\n\r\nconst Layout = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <div className={style.layout}>\r\n      <header className={style.header}><RealAdminNav /></header>\r\n      <aside className={style.aside}>\r\n        <Sidebar />\r\n      </aside>\r\n      <main className={style.main}>{children}</main>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\Upload1.jsx",["664","665","666","667","668","669"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getPerson } from '../../functions/person';\r\nimport { getOutPerson } from '../../functions/outperson';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport './upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Upload1 = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.dateFirst.length - b.dateFirst.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.numTo.length - b.numTo.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.locate.length - b.locate.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.dateGen.length - b.dateGen.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.from.length - b.from.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.to.length - b.to.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            width: '30%'\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload1/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload1/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Upload1\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\UpForm11.js",["670","671","672","673","674","675","676","677","678","679","680","681","682","683"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"./upload.css\";\r\nimport { createOutPerson, getOutPerson, removeOutPerson } from '../../functions/outperson';\r\nimport { ocrBeforeUpload } from '../../functions/ocr';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\n\r\n\r\n\r\nconst AdminDashboard = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to);\r\n\r\n\r\n        console.log({dateFirst});\r\n\r\n\r\n\r\n        \r\n        createOutPerson(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutPerson(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    \r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                                defaultValue={dateFirst}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                                defaultValue={numTo}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                                defaultValue={locate}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                                defaultValue={dateGen}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                                defaultValue={from}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                                defaultValue={to}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                defaultValue={name}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default AdminDashboard\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\person.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\ocr.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\UserSide.js",["684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardDatas from '../../components/UserComponent/Card/CardDatas'\r\nimport NewCardDatas from '../../components/UserComponent/Card/NewCardDatas';\r\nimport CardPost from '../../components/UserComponent/Card/CardPost';\r\nimport Cards from '../../components/UserComponent/Card/Cards';\r\nimport SearchBox from '../../components/UserComponent/SearchBox/SearchBox';\r\nimport './userside.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { AiOutlineInsertRowBelow, AiOutlineBlock } from 'react-icons/ai';\r\nimport { MdOutlineTableRows } from 'react-icons/md';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getPerson } from '../../functions/person';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table, Avatar, Image, Switch,Button, Tooltip } from 'antd';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { removePerson } from '../../functions/person';\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction UserSide() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getPerson(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default UserSide\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\User.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\UpForm33.js",["705","706","707","708","709","710","711","712","713","714","715","716","717","718","719"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutObj, getOutObj, removeOutObj } from '../../../functions/outobj';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutObj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutObj(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutObj(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\UpForm22.js",["720","721","722","723","724","725","726","727","728","729","730","731","732","733","734"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutMoney, getOutMoney, removeOutMoney } from '../../../functions/outmoney';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('')\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutMoney(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutMoney(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutMoney(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                                format=\"yyyy-MM-dd\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                                data-date-format=\"DD MMMM YYYY\"\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\UpForm2.js",["735","736","737","738","739","740","741","742","743","744","745","746"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInMoney, getInMoney, removeInMoney } from '../../../functions/inmoney';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('')\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInMoney(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInMoney(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInMoney(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                                format=\"yyyy-MM-dd\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                                data-date-format=\"DD MMMM YYYY\"\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\UpForm3.js",["747","748","749","750","751","752","753","754","755","756","757","758"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInObj, getInObj, removeInObj } from '../../../functions/inobj';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInObj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInObj(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInObj(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inobj\\Inobj.js",["759","760","761","762","763","764"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInObj } from '../../../functions/inobj';\r\nimport { getOutObj } from '../../../functions/outobj';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const [person1, setPerson1] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [game, setGame] = useState('card')\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInObj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutObj(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload3/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload3/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\UpForm4.js",["765","766","767","768","769","770","771","772","773","774","775","776"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInRes, getInRes, removeInRes } from '../../../functions/inres';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInRes(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInRes(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInRes(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\UpForm44.js",["777","778","779","780","781","782","783","784","785","786","787","788","789","790","791"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutRes, getOutRes, removeOutRes } from '../../../functions/outres';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutRes(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutRes(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutRes(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n   \r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\Inplan.js",["792","793","794","795","796","797"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInPlan } from '../../../functions/inplan';\r\nimport { getOutPlan } from '../../../functions/outplan';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInPlan(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutPlan(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload5/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload5/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\UpForm5.js",["798","799","800","801","802","803","804","805","806","807","808","809"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInPlan, getInPlan, removeInPlan } from '../../../functions/inplan';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInPlan(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInPlan(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInPlan(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplan\\UpForm55.js",["810","811","812","813","814","815","816","817","818","819","820","821"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutPlan, getOutPlan, removeOutPlan } from '../../../functions/outplan';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutPlan(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutPlan(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutPlan(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\Inreso.js",["822","823","824","825","826","827"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInReso } from '../../../functions/inreso';\r\nimport { getOutReso } from '../../../functions/outreso';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInReso(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutReso(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload6/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload6/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\UpForm6.js",["828","829","830","831","832","833","834","835","836","837","838","839"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInReso, getInReso, removeInReso } from '../../../functions/inreso';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInReso(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInReso(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInReso(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\Inedu.js",["840","841","842","843","844","845"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInEdu } from '../../../functions/inedu';\r\nimport { getOutEdu } from '../../../functions/outedu';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInEdu(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutEdu(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))    \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload7/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload7/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inreso\\UpForm66.js",["846","847","848","849","850","851","852","853","854","855","856","857"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutReso, getOutReso, removeOutReso } from '../../../functions/outreso';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutReso(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutReso(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutReso(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                        </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\UpForm7.js",["858","859","860","861","862","863","864","865","866","867","868","869"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInEdu, getInEdu, removeInEdu } from '../../../functions/inedu';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInEdu(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInEdu(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInEdu(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\Inplace.js",["870","871","872","873","874","875"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInPlace } from '../../../functions/inplace';\r\nimport { getOutPlace } from '../../../functions/outplace';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInPlace(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutPlace(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))   \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload8/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload8/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\UpForm8.js",["876","877","878","879","880","881","882","883","884","885","886","887"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInPlace, getInPlace, removeInPlace } from '../../../functions/inplace';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInPlace(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInPlace(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInPlace(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inedu\\UpForm77.js",["888","889","890","891","892","893","894","895","896","897","898","899","900","901","902"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutEdu, getOutEdu, removeOutEdu } from '../../../functions/outedu';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutEdu(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutEdu(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutEdu(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inmoney\\Inmoney.js",["903","904","905","906","907","908"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInMoney } from '../../../functions/inmoney';\r\nimport { getOutMoney } from '../../../functions/outmoney';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const [person1, setPerson1] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [game, setGame] = useState('card')\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInMoney(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutMoney(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n      \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\" >\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')} >รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')} >ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload2/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload2/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n      \r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inres\\Inres.js",["909","910","911","912","913","914"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInRes } from '../../../functions/inres';\r\nimport { getOutRes } from '../../../functions/outres';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInRes(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutRes(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload4/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload4/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\Insubj.js",["915","916","917","918","919","920"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInSubj } from '../../../functions/insubj';\r\nimport { getOutSubj } from '../../../functions/outsubj';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInSubj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutSubj(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload9/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload9/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\UpForm9.js",["921","922","923","924","925","926","927","928","929","930","931","932"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInSubj, getInSubj, removeInSubj } from '../../../functions/insubj';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInSubj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInSubj(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInSubj(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\UpForm10.js",["933","934","935","936","937","938","939","940","941","942","943","944"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInAle, getInAle, removeInAle } from '../../../functions/inale';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInAle(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInAle(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInAle(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inplace\\UpForm88.js",["945","946","947","948","949","950","951","952","953","954","955","956"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutPlace, getOutPlace, removeOutPlace } from '../../../functions/outplace';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutPlace(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutPlace(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutPlace(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\Inale.js",["957","958","959","960","961","962"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInAle } from '../../../functions/inale';\r\nimport { getOutAle } from '../../../functions/outale';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInAle(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutAle(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload10/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload10/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\insubj\\UpForm99.js",["963","964","965","966","967","968","969","970","971","972","973","974","975","976","977"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutSubj, getOutSubj, removeOutSubj } from '../../../functions/outsubj';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutSubj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutSubj(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutSubj(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n   \r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inale\\UpForm100.js",["978","979","980","981","982","983","984","985","986","987","988","989","990","991","992"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutAle, getOutAle, removeOutAle } from '../../../functions/outale';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutAle(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutAle(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutAle(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n  \r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\UpForm11.js",["993","994","995","996","997","998","999","1000","1001","1002","1003","1004"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createInRul, getInRul, removeInRul } from '../../../functions/inrul';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getInRul(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createInRul(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeInRul(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst'\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo'\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate'\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen'\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from'\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to'\r\n        },\r\n        {\r\n            title: 'Download',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'ไฟล์',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <Image src={`http://localhost:5000/uploads/${record.pic}`} />  \r\n                    </a>\r\n                </>\r\n            )\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            render: (record) => (\r\n                <span className=\"btn btn-sm fload-right\"\r\n                onClick={()=> handleRemove(record._id)}>\r\n                    <DeleteOutlined className=\"text-danger\"/>\r\n                </span>\r\n            )\r\n        }\r\n\r\n    ]\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\Inrul.js",["1005","1006","1007","1008","1009","1010"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInRul } from '../../../functions/inrul';\r\nimport { getOutRul } from '../../../functions/outrul';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Inmoney = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [person1, setPerson1] = useState([]);\r\n    const [game, setGame] = useState('card')\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n      }, [])\r\n    \r\n      const loadPerson = (authtoken) => {\r\n        getInRul(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleClick = (gameState) => {\r\n        setGame(gameState)\r\n      }\r\n\r\n      useEffect(() => {\r\n        loadPerson1(user.token);\r\n      }, [])\r\n      const loadPerson1 = (authtoken) => {\r\n        getOutRul(authtoken)\r\n            .then((res) => {\r\n                setPerson1(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n      const columns = [\r\n\r\n        {\r\n            title: 'วันที่',\r\n            dataIndex: 'dateFirst',\r\n            key: 'dateFirst',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'เลขรับ',\r\n            dataIndex: 'numTo',\r\n            key: 'numTo',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ที่',\r\n            dataIndex: 'locate',\r\n            key: 'locate',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ลงวันที่',\r\n            dataIndex: 'dateGen',\r\n            key: 'dateGen',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'จาก',\r\n            dataIndex: 'from',\r\n            key: 'from',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ถึง',\r\n            dataIndex: 'to',\r\n            key: 'to',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },{\r\n            title: 'เรื่อง',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length\r\n        },\r\n        {\r\n            title: 'ดาวน์โหลด',\r\n            render: (record) => (\r\n                <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"ดาวน์โหลด\" >\r\n                   \r\n                    <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                    <div className=\"button-text-download\">\r\n                    ดาวน์โหลด</div>\r\n                </DownloadLink>\r\n            )\r\n        },\r\n        {\r\n            title: 'รายละเอียด',\r\n            render: (record) => (\r\n                <>\r\n                \r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด \r\n                    </a>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n\r\n    const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))\r\n    const filteredData1 = person1.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo)).filter((CardData) => CardData.from.includes(searchFrom))  \r\n\r\n  return <div>\r\n      <div className='SearchBar'><div className='headsearch'>ค้นหา</div>\r\n        <div className=\"search11\"> \r\n        <ConfigProvider locale={locale}>วันที่\r\n            <RangePicker\r\n                value={hackValue || value}\r\n                disabledDate={disabledDate}\r\n                onCalendarChange={val => setDates(val)}\r\n                onChange={val => setValue(val)}\r\n                onOpenChange={onOpenChange}\r\n                format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"search22\">ใส่คำค้นหา <SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search33\">ที่ <SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"ที่\"/></div>\r\n        <div className=\"search44\">จาก <SearchBox value={searchFrom} onValueChange={setSearchFrom} placeholder=\"ระบุจาก\"/>\r\n        <Radio.Group defaultValue=\"a\" buttonStyle=\"solid\">\r\n            <Radio.Button value=\"a\" onClick={ () => handleClick('card')}>รับเข้า</Radio.Button>\r\n            <Radio.Button value=\"b\" onClick={ () => handleClick('playing')}>ส่งออก</Radio.Button>\r\n        </Radio.Group></div>\r\n        </div>\r\n        {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการรับเข้าเอกสาร</div><Link to=\"/admin/upload11/upfrom\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มรับเข้าเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          case 'playing':\r\n            return <div><div className=\"search55\"><div className=\"headbtn\">รายการส่งออกเอกสาร</div><Link to=\"/admin/upload11/upfrom2\" className=\"outbtn\">\r\n            <button className=\"btnadd\">+ เพิ่มส่งออกเอกสาร</button></Link></div><div><Table columns={columns} dataSource={filteredData1} rowKey=\"_id\" className=\"upload-table\" defaultPageSize= \"2\"/></div></div>\r\n          default:\r\n            return null\r\n        }\r\n      })()}\r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Inmoney\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\inrul\\UpForm111.js",["1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025"],"import React, { useState, useEffect } from 'react';\r\nimport DownloadLink from \"react-download-link\";\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Avatar, Image } from 'antd';\r\nimport \"../upload.css\";\r\nimport { createOutRul, getOutRul, removeOutRul } from '../../../functions/outrul';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport { Document,Page } from 'react-pdf/dist/esm/entry.webpack';\r\n\r\nconst UpForm2 = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n    const [ file, setFile] = useState();\r\n    const [ filename, setFilename] = useState('')\r\n    const [ dateFirst, setDateFirst] = useState('');\r\n    const [ numTo, setNumTo] = useState('');\r\n    const [ locate, setLocate ] = useState('');\r\n    const [ dateGen, setDateGen] = useState('');\r\n    const [ from, setFrom] = useState('');\r\n    const [ to, setTo] = useState('');\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n       \r\n    }, [])\r\n\r\n   \r\n    const loadPerson = (authtoken) => {\r\n        getOutRul(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        \r\n        formData.append('file', file);\r\n        formData.append('data', name)\r\n        formData.append('data', dateFirst)\r\n        formData.append('data', numTo)\r\n        formData.append('data', locate)\r\n        formData.append('data', dateGen)\r\n        formData.append('data', from)\r\n        formData.append('data', to)\r\n\r\n\r\n\r\n        \r\n        createOutRul(formData, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('อัพโหลดไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        if (window.confirm(\"คุณแน่ใจว่าจะลบไฟล์!\")){\r\n            setLoading(true);\r\n            removeOutRul(id, user.token)\r\n                .then(res=>{\r\n                    loadPerson(user.token);\r\n                    setLoading(false)\r\n                    toast.success('ลบไฟล์ '+ res.data.name + ' สำเร็จ ')\r\n                }).catch(err=>{\r\n                    setLoading(false)\r\n                    toast.error(err.response)\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function onDocumentLoadSuccess({numPages}){\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n      }\r\n    \r\n      function changePage(offSet){\r\n        setPageNumber(prevPageNumber => prevPageNumber + offSet);\r\n      }\r\n    \r\n      function changePageBack(){\r\n        changePage(-1)\r\n      }\r\n    \r\n      function changePageNext(){\r\n        changePage(+1)\r\n      }\r\n    \r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"container-fluid\">\r\n            \r\n            <div >\r\n                <div className=\"headfrom\">\r\n                เพิ่มข้อมูลรับเข้าเอกสาร\r\n                </div>\r\n                <div className=\"previewPDF\">\r\n                    <Document file={file} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        <Page height=\"800\" pageNumber={pageNumber} />\r\n                    </Document>\r\n                </div>\r\n                <div className=\"realfrom\">\r\n                    <form onSubmit={onSubmit} className=\"allform\">\r\n                        \r\n                    <div className=\"file-input\">\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"file\" \r\n                                onChange={ (e) => setFile(e.target.files[0]) }                                                                \r\n                            />\r\n                         \r\n                            <label className=\"file-name\"\r\n                                htmlFor=\"customfile\"\r\n                            >\r\n                                {filename} \r\n                            </label>\r\n                        </div>\r\n\r\n                \r\n\r\n                        <div className=\"dateinput\">\r\n                            <label>วันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"date-input\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateFirst(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"noinput\">\r\n                            <label>เลขรับ</label>\r\n                            <input type=\"number\"\r\n                                className=\"no\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setNumTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"nofrominput\">\r\n                            <label>ที่</label>\r\n                            <input type=\"text\"\r\n                                className=\"nofrom\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setLocate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"inputdate\">\r\n                            <label>ลงวันที่</label>\r\n                            <input type=\"date\"\r\n                                className=\"datedate\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setDateGen(e.target.value)}\r\n                            />\r\n                        </div>\r\n                    \r\n                        <div className=\"frominput\">\r\n                            <label>จาก</label>\r\n                            <input type=\"text\"\r\n                                className=\"formbox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setFrom(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"tooinput\">\r\n                            <label>ถึง</label>\r\n                            <input type=\"text\"\r\n                                className=\"toobox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setTo(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"nameinput\">\r\n                            <label>เรื่อง</label>\r\n                            <input type=\"text\"\r\n                                className=\"namebox\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <button className=\"btnfrom\">เพิ่ม</button>\r\n                    </form>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default UpForm2\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\routes\\LoadingToRedirect.js",["1026","1027"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { currentUser } from \"../../functions/auth\";\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(3);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount((currentCount) => --currentCount);\r\n        }, 1000)\r\n        // redirect if ..\r\n        count === 0 && history.push('/');\r\n        return () => clearInterval(interval)\r\n    }, [count, history])\r\n\r\n    return (\r\n       \r\n\r\n        <div className=\"container p-5 text-center text-danger\">\r\n            <h5>Redirect in {count} second</h5>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Inrul.js",["1028","1029","1030","1031","1032","1033"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInRul } from '../../../functions/inrul';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInRul(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Inale.js",["1034","1035","1036","1037","1038","1039"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInAle } from '../../../functions/inale';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInAle(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Inplace.js",["1040","1041","1042","1043","1044","1045"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInPlace } from '../../../functions/inplace';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInPlace(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Inedu.js",["1046","1047","1048","1049","1050","1051"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInEdu } from '../../../functions/inedu';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInEdu(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Insubj.js",["1052","1053","1054","1055","1056","1057"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInSubj } from '../../../functions/insubj';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInSubj(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Inreso.js",["1058","1059","1060","1061","1062","1063"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInReso } from '../../../functions/inreso';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInReso(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Inplan.js",["1064","1065","1066","1067","1068","1069"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInPlan } from '../../../functions/inplan';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInPlan(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Inobj.js",["1070","1071","1072","1073","1074","1075"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInObj } from '../../../functions/inobj';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInObj(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Inres.js",["1076","1077","1078","1079","1080","1081"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inobj.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInRes } from '../../../functions/inres';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInRes(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Inmoney.js",["1082","1083","1084","1085","1086","1087","1088","1089"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardPost from './Card/CardPost';\r\nimport Cards from './Card/Cards';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport './inmoney.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\nimport { BlockOutlined, UnorderedListOutlined, FilePdfTwoTone } from '@ant-design/icons';\r\nimport { getInMoney } from '../../../functions/inmoney';\r\nimport { toast } from 'react-toastify';\r\nimport { ConfigProvider, DatePicker , Table} from 'antd';\r\nimport { DeleteOutlined, VerifiedOutlined } from '@ant-design/icons';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\n\r\n\r\nfunction Inmoney() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n  const { RangePicker } = DatePicker;\r\n  const [hackValue, setHackValue] = useState();\r\n  const [value, setValue] = useState();\r\n  const [dates, setDates] = useState([]);\r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  const [game, setGame] = useState('card')\r\n  const { Column, ColumnGroup } = Table;\r\n\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getInMoney(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n            console.log(res.data)\r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\nregisterLocale('th', th)\r\n\r\nconst disabledDate = current => {\r\n  if (!dates || dates.length === 0) {\r\n    return false;\r\n  }\r\n  const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n  const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n  return tooEarly || tooLate;\r\n};\r\n\r\nconst onOpenChange = open => {\r\n  if (open) {\r\n    setHackValue([]);\r\n    setDates([]);\r\n  } else {\r\n    setHackValue(undefined);\r\n  }\r\n};\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((person) => person.name.includes(searchText)).filter((person) => person.locate.includes(searchNo))\r\n  const filteredData = person.filter((CardData) => CardData.name.includes(searchText)).filter((CardData) => CardData.locate.includes(searchNo))\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\">\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"<\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n\r\n  /*const columns = [\r\n\r\n    {\r\n      title: 'เรื่อง',\r\n      dataIndex: 'name',\r\n      key: 'name'\r\n    },\r\n    {\r\n        title: 'Download',\r\n        render: (record) => (\r\n            <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >\r\n               \r\n                <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                <div className=\"button-text-download\">\r\n                ดาวน์โหลด</div>\r\n            </DownloadLink>\r\n        )\r\n    },\r\n    \r\n\r\n]*/\r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  const handleClick = (gameState) => {\r\n    setGame(gameState)\r\n  }\r\n\r\n  return (\r\n    <div ><div className='HeadSearch1'>ค้นหา</div>\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\">วันที่ <ConfigProvider locale={locale}> \r\n        <RangePicker\r\n            value={hackValue || value}\r\n            disabledDate={disabledDate}\r\n            onCalendarChange={val => setDates(val)}\r\n            onChange={val => setValue(val)}\r\n            onOpenChange={onOpenChange}\r\n            format= 'DD/MM/YYYY'\r\n            /></ConfigProvider></div>\r\n        <div className=\"chblog\">\r\n        <IconButton aria-label=\"delete\" onClick={ () => handleClick('card')} color=\"primary\"> \r\n        <BlockOutlined />\r\n      </IconButton>\r\n      <IconButton aria-label=\"delete\" onClick={ () => handleClick('playing')} color=\"primary\"> \r\n        <UnorderedListOutlined />\r\n      </IconButton>\r\n        </div>\r\n      </div> \r\n      {(() => {\r\n        switch (game) {\r\n          case 'card':\r\n            return <div><PaginatedItems itemsPerPage={12} />{cardPost}</div>\r\n          case 'playing':\r\n            return <div className=\"chblog-table\"><div></div><Table dataSource={filteredData} rowKey=\"_id\" className=\"search-table\" defaultPageSize= \"2\">\r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    <FilePdfTwoTone twoToneColor=\"#ff0000\"/>\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n                <Column title=\"เรื่อง\" dataIndex=\"name\" key=\"name\" width={900}></Column>\r\n                \r\n                <Column render={ (record) => (\r\n                <>\r\n                    <a href={`http://localhost:5000/uploads/${record.pic}`} target=\"_blank\" >\r\n                    รายละเอียด\r\n                    </a>\r\n                </>\r\n            )}></Column>\r\n            <Column render={(record) => (\r\n                      <DownloadLink className=\"button-field-download\"  filename={record.pic} label=\"Download\" >        \r\n                          <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n                          <div className=\"button-text-download\">\r\n                          ดาวน์โหลด</div>\r\n                      </DownloadLink>\r\n                  )}></Column>\r\n              \r\n              </Table></div>\r\n          default:\r\n            return null\r\n        }\r\n\r\n      })()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Inmoney\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outperson.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Header\\HeaderTop.js",["1090","1091","1092"],"import React from 'react'\r\nimport { Button } from 'antd'\r\nimport './headertop.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nfunction HeaderTop() {\r\n    const { user } = useSelector((state) =>  ({ ...state }))\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n\r\n    const logout = () => {\r\n        dispatch({\r\n          type: 'LOGOUT',\r\n          payload: null\r\n        })\r\n        history.push('/')\r\n        toast.success('Logout Success')\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            <div className =\"Header1\">\r\n                    <div> \r\n                        <img src={require('../Img/CS.jpg').default} alt=\"CS image\" className=\"Logo\" />\r\n                    </div>\r\n                    <div className =\"HeadText\">\r\n                         ระบบการสืบค้นข้อมูลเอกสารอัตโนมัติ \r\n                    </div>\r\n                    {user && (\r\n                        <>\r\n                            <div className =\"StatusLoginText\">{user.name}</div>\r\n                            <a className=\"LogoutButton\" onClick={logout}>ออกจากระบบ</a>\r\n                        </>\r\n                        \r\n                    )}\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderTop\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SideBars.js",["1093","1094","1095"],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { SidebarData } from './SideBarData';\r\nimport { IconContext } from 'react-icons/lib';\r\nimport Submenu from './SubMenu';\r\nimport Button from '@mui/material/Button';\r\nimport './Sidebar.css';\r\n\r\n\r\n\r\nconst Nav = styled.div`\r\n    background: #0;\r\n    height: 88px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n`; \r\n\r\nconst NavIcon = styled(Link)`\r\n    margin-left: 2rem;\r\n    font-size: 2rem;\r\n    height: 88px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    \r\n`;\r\n\r\nconst SidebarNav = styled.nav`\r\n    background-image: linear-gradient(#0192c5, #10457a);\r\n    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.1);\r\n    width: 270px;\r\n    height: 800px;\r\n    display: flex;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 90px;\r\n    left: ${({ sidebar }) => (sidebar ? '0' : '-100%')};\r\n\r\n\r\n    z-index: 999;\r\n`;\r\n\r\nconst SidebarWrap = styled.div`\r\n    width: 100%;\r\n    height: 50vh;\r\n`;\r\n\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n    const [sidebar, setSidebar] = useState(true);\r\n\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{ color : '#fff'}}>\r\n            <Nav>     \r\n                \r\n            </Nav>\r\n            <SidebarNav sidebar={sidebar}>\r\n                <SidebarWrap>\r\n\r\n                {SidebarData.map((item, index) => {\r\n                    return <Submenu item={item} key={index} />;\r\n                })}\r\n                </SidebarWrap>\r\n            </SidebarNav>\r\n        </IconContext.Provider>\r\n        </>\r\n\r\n\r\n    );\r\n    \r\n    \r\n    \r\n};\r\n\r\nexport default Sidebar\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\SearchBox\\SearchBox.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\Layout.jsx",["1096"],"import React from 'react';\r\nimport style from './layout.module.css';\r\nimport Sidebar from './components/sidebar/Sidebar.jsx';\r\nimport Header from './components/header/HeaderUp';\r\nimport RealAdminNav from './RealAdminNav';\r\n\r\nconst Layout = props => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <div className={style.layout}>\r\n      <header className={style.header}><RealAdminNav /></header>\r\n      <aside className={style.aside}>\r\n        <Sidebar />\r\n      </aside>\r\n      <main className={style.main}>{children}</main>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\header\\Header.jsx",["1097"],"import React from 'react';\r\nimport style from './header.module.css';\r\nimport image from '../Img/CS.jpg';\r\n\r\nconst Header = props => {\r\n  return (\r\n    \r\n            <div className ={style.Header1}>\r\n                    <div className ={style.Logo}> \r\n                    <img src={image} height={80}  />\r\n                    </div>\r\n                    <div className ={style.HeadText}>\r\n                    </div>\r\n                \r\n                </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Header;","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inres.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inobj.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inmoney.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inplan.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inreso.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inres\\Card\\CardPost.js",["1098","1099","1100"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInRes } from '../../../../functions/inres';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInRes(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card4.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inobj\\Card\\CardPost.js",["1101","1102","1103"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInObj } from '../../../../functions/inobj';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInObj(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card3.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SubMenu.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Sidebar\\SideBarData.js",["1104","1105"],"import React from 'react';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport * as IoIcons from 'react-icons/io';\r\nimport * as RiIcons from 'react-icons/ri';\r\nimport * as GoIcons from 'react-icons/go';\r\n\r\nexport const SidebarData =[\r\n    {\r\n        title: 'หน้าหลัก ',\r\n        path: '/search',\r\n        icon: <AiIcons.AiFillHome />,\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    \r\n        /*subNav: [\r\n          {\r\n            title: 'Users',\r\n            path: '/overview/users',\r\n            icon: <IoIcons.IoIosPaper />\r\n          },\r\n          {\r\n            title: 'Revenue',\r\n            path: '/overview/revenue',\r\n            icon: <IoIcons.IoIosPaper />\r\n          }\r\n        ]*/\r\n      },\r\n      {\r\n        title: 'ด้านบริหารและธุรการ(ทั่วไป)',\r\n        path: '/search1',\r\n        icon: <GoIcons.GoPrimitiveDot />,\r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n        \r\n        /*subNav: [\r\n          {\r\n            title: 'Reports',\r\n            path: '/reports/reports1',\r\n            icon: <IoIcons.IoIosPaper />,\r\n            cName: 'sub-nav'\r\n          },\r\n          {\r\n            title: 'Reports 2',\r\n            path: '/reports/reports2',\r\n            icon: <IoIcons.IoIosPaper />,\r\n            cName: 'sub-nav'\r\n          },\r\n          {\r\n            title: 'Reports 3',\r\n            path: '/reports/reports3',\r\n            icon: <IoIcons.IoIosPaper />\r\n          }\r\n        ]*/\r\n      },\r\n      {\r\n        title: 'ด้านการเงิน',\r\n        path: '/products',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ด้านพัสดุ',\r\n        path: '/team',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ด้านวิจัย',\r\n        path: '/messages',\r\n        icon: <GoIcons.GoPrimitiveDot />,\r\n    \r\n        iconClosed: <RiIcons.RiArrowDownSFill />,\r\n        iconOpened: <RiIcons.RiArrowUpSFill />,\r\n    \r\n        /*subNav: [\r\n          {\r\n            title: 'Message 1',\r\n            path: '/messages/message1',\r\n            icon: <IoIcons.IoIosPaper />\r\n          },\r\n          {\r\n            title: 'Message 2',\r\n            path: '/messages/message2',\r\n            icon: <IoIcons.IoIosPaper />\r\n          }\r\n        ]*/\r\n      },\r\n      {\r\n        title: 'ด้านแผนยุทธศาสตร์',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ด้านทรัพยากรบุคคล',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ด้านการบริการการศึกษา',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ด้านอาคารสถานที่',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'สาขาวิชาต่างๆ',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'คำสั่ง ประกาศ',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      },\r\n      {\r\n        title: 'ระเบียบข้อบังคับ',\r\n        path: '/support',\r\n        icon: <GoIcons.GoPrimitiveDot />\r\n      }\r\n];","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inmoney\\Card\\CardPost.js",["1106","1107","1108","1109","1110","1111"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInMoney } from '../../../../functions/inmoney';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { Table, Avatar, Image } from 'antd';\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInMoney(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card2.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplan\\Card\\CardPost.js",["1112","1113","1114"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInPlan } from '../../../../functions/inplan';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInPlan(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card5.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านแผนยุทธศาสตร์</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\insubj.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\Sidebar.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inreso\\Card\\CardPost.js",["1115","1116","1117"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInReso } from '../../../../functions/inreso';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInReso(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card6.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\RealAdminNav.js",["1118","1119","1120","1121","1122","1123","1124"],"import React from 'react'\r\nimport './realadminnav.css' \r\nimport { Menu } from 'antd';\r\nimport { HomeOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { UserOutlined } from '@ant-design/icons';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nfunction RealAdminNav() {\r\n    const { user } = useSelector((state) =>  ({ ...state }))\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    \r\n    const logout = () => {\r\n        dispatch({\r\n          type: 'LOGOUT',\r\n          payload: null\r\n        })\r\n        history.push('/');\r\n        toast.success('Logout Success')\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className =\"Header3\">\r\n                    <div> \r\n                        <img src={require('./components/Img/CS.jpg').default} alt=\"CS image\" className=\"Logo\" />\r\n                    </div>\r\n                    <div className =\"HeadTextNav\">\r\n                    </div>\r\n\r\n                    {user && (\r\n                        <>\r\n                            <div className =\"StatusLoginText\"><UserOutlined></UserOutlined>{user.name}</div>\r\n                            <a className=\"LogoutButton\" onClick={logout}>ออกจากระบบ</a>\r\n                        </>\r\n                        \r\n                    )}\r\n\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RealAdminNav\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inedu.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Card\\CardPost.js",["1125","1126","1127"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInSubj } from '../../../../functions/insubj';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInSubj(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card9.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\insubj\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\header\\HeaderUp.jsx",["1128"],"import React from 'react';\r\nimport style from './header.module.css';\r\nimport image from '../Img/CS.jpg';\r\n\r\nconst Header = props => {\r\n  return (\r\n    \r\n            <div className ={style.Header1}>\r\n                    <div className ={style.Logo}> \r\n                    <img src={image} height={80}  />\r\n                    </div>\r\n                    <div className ={style.HeadText}>\r\n                         ระบบการสืบค้นข้อมูลเอกสารอัตโนมัติ \r\n                    </div>\r\n                \r\n                </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default Header;","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\menu.config.js",["1129","1130"],"import {\r\n  HomeIcon,\r\n  UserIcon,\r\n  ChevronRightIcon\r\n  \r\n} from '@heroicons/react/outline';\r\n\r\nexport const sideMenu = [\r\n  {\r\n    label: 'ด้านบริหารและธุรการ(ทั่วไป)',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload1',\r\n  },{\r\n    label: 'ด้านการเงิน',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload2',\r\n  },{\r\n    label: 'ด้านพัสดุ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload3',\r\n  },{\r\n    label: 'ด้านวิจัย',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload4',\r\n  },{\r\n    label: 'ด้านแผนยุทธศาสตร์',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload5',\r\n  },{\r\n    label: 'ด้านทรัพยากรบุคคล',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload6',\r\n  },{\r\n    label: 'ด้านการบริการการศึกษา',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload7',\r\n  },{\r\n    label: 'ด้านอาคารสถานที่',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload8',\r\n  },{\r\n    label: 'สาขาวิชาต่างๆ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload9',\r\n  },{\r\n    label: 'คำสั่ง ประกาศ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload10',\r\n  },{\r\n    label: 'ระเบียบข้อบังคับ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/upload11',\r\n  },{\r\n    label: 'สรุปรายการเอกสาร',\r\n    Icon: ChevronRightIcon,\r\n    to: '/admin/summary',\r\n  },\r\n];\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\navItem\\NavItem.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\layout\\components\\sidebar\\navItem\\NavItemHeader.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inedu\\Card\\CardPost.js",["1131","1132","1133"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInEdu } from '../../../../functions/inedu';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInEdu(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card7.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inplace.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inale.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inplace\\Card\\CardPost.js",["1134","1135","1136"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInPlace } from '../../../../functions/inplace';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInPlace(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card8.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inale\\Card\\CardPost.js",["1137","1138","1139"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInAle } from '../../../../functions/inale';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInAle(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card10.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\inrul.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outrul.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\user\\inrul\\Card\\CardPost.js",["1140","1141","1142"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getInRul } from '../../../../functions/inrul';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\n\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getInRul(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('./Card11.png').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outsubj.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outale.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outplace.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outres.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outmoney.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outedu.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outreso.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outplan.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\outobj.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\menu.config.js",["1143"],"import {\r\n  HomeIcon,\r\n  UserIcon,\r\n  ChevronRightIcon\r\n  \r\n} from '@heroicons/react/outline';\r\n\r\nexport const sideMenu = [\r\n  {\r\n    label: 'หน้าหลัก',\r\n    Icon: HomeIcon,\r\n    to: '/search',\r\n  },\r\n  {\r\n    label: 'ด้านบริหารและธุรการ(ทั่วไป)',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search1',\r\n  },{\r\n    label: 'ด้านการเงิน',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search2',\r\n  },{\r\n    label: 'ด้านพัสดุ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search3',\r\n  },{\r\n    label: 'ด้านวิจัย',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search4',\r\n  },{\r\n    label: 'ด้านแผนยุทธศาสตร์',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search5',\r\n  },{\r\n    label: 'ด้านทรัพยากรบุคคล',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search6',\r\n  },{\r\n    label: 'ด้านการบริการการศึกษา',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search7',\r\n  },{\r\n    label: 'ด้านอาคารสถานที่',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search8',\r\n  },{\r\n    label: 'สาขาวิชาต่างๆ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search9',\r\n  },{\r\n    label: 'คำสั่ง ประกาศ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search10',\r\n  },{\r\n    label: 'ระเบียบข้อบังคับ',\r\n    Icon: ChevronRightIcon,\r\n    to: '/search11',\r\n  },\r\n];\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\navItem\\NavItem.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\CardPost.js",["1144","1145","1146","1147","1148","1149"],"import React, { useEffect, useState } from 'react';\r\nimport './CardPost.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPerson } from '../../../functions/person';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { Table, Avatar, Image } from 'antd';\r\n\r\nfunction CardPost(props) {\r\n    const { CardData, onBgClick }= props;\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    useEffect(() => {\r\n      loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n      getPerson(authtoken)\r\n          .then((res) => {\r\n              setPerson(res.data)\r\n              console.log(res.data)\r\n          }).catch((err) => {\r\n              toast.error(err)\r\n              console.log(err)\r\n          })\r\n  }\r\n  \r\n    return (\r\n        <div className=\"card-post\">\r\n            <div className=\"card-post-bg\" onClick={onBgClick}/>\r\n            <div className=\"card-post-content\">\r\n                <img  src={require('../Img/CardImg/Card1.JPG').default} alt=\"card\" />\r\n                <div className=\"card-post-detail\">\r\n                <div className=\"card-post-detail1\">{CardData.name}</div>\r\n                <div className=\"card-post-detail2\">หมวดหมู่: ด้านบริหารและธุรการ(ทั่วไป)</div>\r\n                <div className=\"card-post-detail3\">เลขที่หนังสือ : {CardData.locate}</div>\r\n                <div className=\"card-post-detail4\">\r\n               <a href={`http://localhost:5000/uploads/${CardData.pic}`} target=\"_blank\" > \r\n                   <div className=\"infobutton\">\r\n                   ดูรายละเอียด</div>\r\n                </a>\r\n                <DownloadLink   filename={CardData.pic} label=\"ดาวน์โหลด\" className=\"button-text-download\" >\r\n                   <AiOutlineVerticalAlignBottom className=\"button-icon-download\"/>          \r\n               </DownloadLink>\r\n                \r\n                </div>\r\n                \r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardPost","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\Cards.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\NewCardDatas.js",["1150","1151","1152","1153","1154","1155","1156","1157"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { getPerson } from '../../../functions/person';\r\nimport { toast } from 'react-toastify';\r\nimport { Table, Avatar, Image } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\components\\UserComponent\\Card\\CardDatas.js",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\layout\\components\\sidebar\\navItem\\NavItemHeader.jsx",[],"C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\pages\\admin\\summary\\Summary.js",["1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188"],"import React, { useState, useEffect } from 'react';\r\nimport SearchBox from '../../../components/UserComponent/SearchBox/SearchBox';\r\nimport { ConfigProvider, DatePicker, Button, Table, Radio, Image, Tag, Space, Pagination } from 'antd';\r\nimport locale from 'antd/lib/locale/th_TH';\r\nimport { AiOutlineVerticalAlignBottom} from \"react-icons/ai\";\r\nimport DownloadLink from \"react-download-link\";\r\nimport { getInSubj } from '../../../functions/insubj';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport '../upload1.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { getDocByMonthInPerson, getDocByDayInPerson, getDocByYearInPerson, getDocByWeekInPerson, \r\n    getDocByDayOutPerson, getDocByMonthOutPerson, getDocByYearOutPerson, getDocByWeekOutPerson } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInMoney, getDocByDayInMoney, getDocByYearInMoney, getDocByWeekInMoney, \r\n    getDocByDayOutMoney, getDocByMonthOutMoney, getDocByYearOutMoney, getDocByWeekOutMoney } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInObj, getDocByDayInObj, getDocByYearInObj, getDocByWeekInObj, \r\n    getDocByDayOutObj, getDocByMonthOutObj, getDocByYearOutObj, getDocByWeekOutObj } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInRes, getDocByDayInRes, getDocByYearInRes, getDocByWeekInRes,\r\n    getDocByDayOutRes, getDocByMonthOutRes, getDocByYearOutRes, getDocByWeekOutRes } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInPlan, getDocByDayInPlan, getDocByYearInPlan, getDocByWeekInPlan,\r\n    getDocByDayOutPlan, getDocByMonthOutPlan, getDocByYearOutPlan, getDocByWeekOutPlan } from '../../../functions/summary';    \r\n\r\nimport { getDocByMonthInReso, getDocByDayInReso, getDocByYearInReso, getDocByWeekInReso,\r\n    getDocByDayOutReso, getDocByMonthOutReso, getDocByYearOutReso, getDocByWeekOutReso } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInEdu, getDocByDayInEdu, getDocByYearInEdu, getDocByWeekInEdu, \r\n    getDocByDayOutEdu, getDocByMonthOutEdu, getDocByYearOutEdu, getDocByWeekOutEdu } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInPlace, getDocByDayInPlace, getDocByYearInPlace, getDocByWeekInPlace,\r\n    getDocByDayOutPlace, getDocByMonthOutPlace, getDocByYearOutPlace, getDocByWeekOutPlace } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInSubj, getDocByDayInSubj, getDocByYearInSubj, getDocByWeekInSubj, \r\n    getDocByDayOutSubj, getDocByMonthOutSubj, getDocByYearOutSubj, getDocByWeekOutSubj } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInAle, getDocByDayInAle, getDocByYearInAle, getDocByWeekInAle, \r\n    getDocByDayOutAle, getDocByMonthOutAle, getDocByYearOutAle, getDocByWeekOutAle } from '../../../functions/summary';\r\n\r\nimport { getDocByMonthInRul, getDocByDayInRul, getDocByYearInRul, getDocByWeekInRul,\r\n    getDocByDayOutRul, getDocByMonthOutRul, getDocByYearOutRul, getDocByWeekOutRul } from '../../../functions/summary';\r\n\r\nconst Summary = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [searchNo, setSearchNo] = useState('');\r\n    const [searchFrom, setSearchFrom] = useState('');\r\n    const { RangePicker } = DatePicker;\r\n    const [hackValue, setHackValue] = useState();\r\n    const [dates, setDates] = useState([]);\r\n    const [value, setValue] = useState();\r\n    const [person, setPerson] = useState([]);\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    const { Column, ColumnGroup } = Table;\r\n\r\n    //  InPerson\r\n    const [ docbydayinperson, setDocbydayinperson ] = useState(0);\r\n    const [ docbymonthinperson, setDocbymonthinperson ] = useState(0);\r\n    const [ docbyyearinperson, setDocbyyearinperson ] = useState(0);\r\n    const [ docbyweekinperson, setDocbyweekinperson ] = useState(0);\r\n    //  OutPerson\r\n    const [ docbydayoutperson, setDocbydayoutperson ] = useState(0);\r\n    const [ docbymonthoutperson, setDocbymonthoutperson ] = useState(0);\r\n    const [ docbyyearoutperson, setDocbyyearoutperson ] = useState(0);\r\n    const [ docbyweekoutperson, setDocbyweekoutperson ] = useState(0);\r\n    //  InMoney\r\n    const [ docbydayinmoney, setDocbydayinmoney ] = useState(0);\r\n    const [ docbymonthinmoney, setDocbymonthinmoney ] = useState(0);\r\n    const [ docbyyearinmoney, setDocbyyearinmoney ] = useState(0);\r\n    const [ docbyweekinmoney, setDocbyweekinmoney ] = useState(0);\r\n    //  OutMoney\r\n    const [ docbydayoutmoney, setDocbydayoutmoney ] = useState(0);\r\n    const [ docbymonthoutmoney, setDocbymonthoutmoney ] = useState(0);\r\n    const [ docbyyearoutmoney, setDocbyyearoutmoney ] = useState(0);\r\n    const [ docbyweekoutmoney, setDocbyweekoutmoney ] = useState(0);\r\n    //  InObj\r\n    const [ docbydayinobj, setDocbydayinobj ] = useState(0);\r\n    const [ docbymonthinobj, setDocbymonthinobj ] = useState(0);\r\n    const [ docbyyearinobj, setDocbyyearinobj ] = useState(0);\r\n    const [ docbyweekinobj, setDocbyweekinobj ] = useState(0);\r\n    //  OutObj\r\n    const [ docbydayoutobj, setDocbydayoutobj ] = useState(0);\r\n    const [ docbymonthoutobj, setDocbymonthoutobj ] = useState(0);\r\n    const [ docbyyearoutobj, setDocbyyearoutobj] = useState(0);\r\n    const [ docbyweekoutobj, setDocbyweekoutobj] = useState(0);\r\n    //  InRes\r\n    const [ docbydayinres, setDocbydayinres ] = useState(0);\r\n    const [ docbymonthinres, setDocbymonthinres ] = useState(0);\r\n    const [ docbyyearinres, setDocbyyearinres ] = useState(0);\r\n    const [ docbyweekinres, setDocbyweekinres ] = useState(0);\r\n    //  OutRes\r\n    const [ docbydayoutres, setDocbydayoutres ] = useState(0);\r\n    const [ docbymonthoutres, setDocbymonthoutres ] = useState(0);\r\n    const [ docbyyearoutres, setDocbyyearoutres] = useState(0);\r\n    const [ docbyweekoutres, setDocbyweekoutres] = useState(0);\r\n    //  InPlan\r\n    const [ docbydayinplan, setDocbydayinplan ] = useState(0);\r\n    const [ docbymonthinplan, setDocbymonthinplan ] = useState(0);\r\n    const [ docbyyearinplan, setDocbyyearinplan ] = useState(0);\r\n    const [ docbyweekinplan, setDocbyweekinplan ] = useState(0);\r\n    //  OutPlan\r\n    const [ docbydayoutplan, setDocbydayoutplan ] = useState(0);\r\n    const [ docbymonthoutplan, setDocbymonthoutplan ] = useState(0);\r\n    const [ docbyyearoutplan, setDocbyyearoutplan] = useState(0);\r\n    const [ docbyweekoutplan, setDocbyweekoutplan] = useState(0);\r\n    //  InReso\r\n    const [ docbydayinreso, setDocbydayinreso ] = useState(0);\r\n    const [ docbymonthinreso, setDocbymonthinreso ] = useState(0);\r\n    const [ docbyyearinreso, setDocbyyearinreso ] = useState(0);\r\n    const [ docbyweekinreso, setDocbyweekinreso ] = useState(0);\r\n    //  OutReso\r\n    const [ docbydayoutreso, setDocbydayoutreso ] = useState(0);\r\n    const [ docbymonthoutreso, setDocbymonthoutreso ] = useState(0);\r\n    const [ docbyyearoutreso, setDocbyyearoutreso ] = useState(0);\r\n    const [ docbyweekoutreso, setDocbyweekoutreso ] = useState(0);\r\n    //  InEdu\r\n    const [ docbydayinedu, setDocbydayinedu ] = useState(0);\r\n    const [ docbymonthinedu, setDocbymonthinedu ] = useState(0);\r\n    const [ docbyyearinedu, setDocbyyearinedu ] = useState(0);\r\n    const [ docbyweekinedu, setDocbyweekinedu ] = useState(0);\r\n    //  OutEdu\r\n    const [ docbydayoutedu, setDocbydayoutedu ] = useState(0);\r\n    const [ docbymonthoutedu, setDocbymonthoutedu ] = useState(0);\r\n    const [ docbyyearoutedu, setDocbyyearoutedu ] = useState(0);\r\n    const [ docbyweekoutedu, setDocbyweekoutedu ] = useState(0);\r\n    //  InPlace\r\n    const [ docbydayinplace, setDocbydayinplace ] = useState(0);\r\n    const [ docbymonthinplace, setDocbymonthinplace ] = useState(0);\r\n    const [ docbyyearinplace, setDocbyyearinplace ] = useState(0);\r\n    const [ docbyweekinplace, setDocbyweekinplace ] = useState(0);\r\n    //  OutPlace\r\n    const [ docbydayoutplace, setDocbydayoutplace ] = useState(0);\r\n    const [ docbymonthoutplace, setDocbymonthoutplace ] = useState(0);\r\n    const [ docbyyearoutplace, setDocbyyearoutplace ] = useState(0);\r\n    const [ docbyweekoutplace, setDocbyweekoutplace ] = useState(0);\r\n    //  InSubj\r\n    const [ docbydayinsubj, setDocbydayinsubj ] = useState(0);\r\n    const [ docbymonthinsubj, setDocbymonthinsubj ] = useState(0);\r\n    const [ docbyyearinsubj, setDocbyyearinsubj] = useState(0);\r\n    const [ docbyweekinsubj, setDocbyweekinsubj] = useState(0);\r\n    //  OutSubj\r\n    const [ docbydayoutsubj, setDocbydayoutsubj ] = useState(0);\r\n    const [ docbymonthoutsubj, setDocbymonthoutsubj ] = useState(0);\r\n    const [ docbyyearoutsubj, setDocbyyearoutsubj ] = useState(0);\r\n    const [ docbyweekoutsubj, setDocbyweekoutsubj ] = useState(0);\r\n    //  InAle\r\n    const [ docbydayinale, setDocbydayinale ] = useState(0);\r\n    const [ docbymonthinale, setDocbymonthinale ] = useState(0);\r\n    const [ docbyyearinale, setDocbyyearinale] = useState(0);\r\n    const [ docbyweekinale, setDocbyweekinale ] = useState(0);\r\n    //  OutAle\r\n    const [ docbydayoutale, setDocbydayoutale ] = useState(0);\r\n    const [ docbymonthoutale, setDocbymonthoutale ] = useState(0);\r\n    const [ docbyyearoutale, setDocbyyearoutale ] = useState(0);\r\n    const [ docbyweekoutale, setDocbyweekoutale ] = useState(0);\r\n    //  InRul\r\n    const [ docbydayinrul, setDocbydayinrul ] = useState(0);\r\n    const [ docbymonthinrul, setDocbymonthinrul ] = useState(0);\r\n    const [ docbyyearinrul, setDocbyyearinrul ] = useState(0);\r\n    const [ docbyweekinrul, setDocbyweekinrul ] = useState(0);\r\n    //  OutRul\r\n    const [ docbydayoutrul, setDocbydayoutrul ] = useState(0);\r\n    const [ docbymonthoutrul, setDocbymonthoutrul ] = useState(0);\r\n    const [ docbyyearoutrul, setDocbyyearoutrul ] = useState(0);\r\n    const [ docbyweekoutrul, setDocbyweekoutrul ] = useState(0);\r\n    \r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n        \r\n        getValueOfDocumentSummary();\r\n\r\n      }, [])\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n      const loadPerson = (authtoken) => {\r\n        getInSubj(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n                console.log(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const disabledDate = current => {\r\n        if (!dates || dates.length === 0) {\r\n          return false;\r\n        }\r\n        const tooLate = dates[0] && current.diff(dates[0], 'days') > 7;\r\n        const tooEarly = dates[1] && dates[1].diff(current, 'days') > 7;\r\n        return tooEarly || tooLate;\r\n      };\r\n\r\n\r\n      const onOpenChange = open => {\r\n        if (open) {\r\n          setHackValue([]);\r\n          setDates([]);\r\n        } else {\r\n          setHackValue(undefined);\r\n        }\r\n      };\r\n\r\n      const getValueOfDocumentSummary = () => {\r\n\r\n          //  InPerson\r\n          getDocByDayInPerson(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInPerson(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinperson(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n    \r\n    \r\n          //  OutPerson\r\n          getDocByDayOutPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbydayoutperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbymonthoutperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n      \r\n          getDocByYearOutPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutPerson(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutperson(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n          //  InMoney\r\n          getDocByDayInMoney(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInMoney(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinmoney(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInMoney(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInMoney(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          \r\n          //  OutMoney\r\n          getDocByDayOutMoney(user.token)\r\n          .then((res) => {\r\n\r\n                  setDocbydayoutmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutMoney(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbymonthoutmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n      \r\n          getDocByYearOutMoney(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutMoney(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutmoney(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n\r\n          //  InObj\r\n          getDocByDayInObj(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInObj(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinobj(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInObj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInObj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutObj\r\n          getDocByDayOutObj(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutObj(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutobj(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutObj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutObj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutobj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n\r\n          //  InRes\r\n          getDocByDayInRes(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInRes(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinres(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInRes(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInRes(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutRes\r\n          getDocByDayOutRes(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutRes(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutres(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutRes(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutRes(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutres(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n\r\n          //  InPlan\r\n          getDocByDayInPlan(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInPlan(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinplan(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInPlan(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInPlan(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutPlan\r\n          getDocByDayOutPlan(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutPlan(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutplan(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutPlan(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutPlan(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutplan(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n          //  InReso\r\n          getDocByDayInReso(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInReso(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinreso(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInReso(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInReso(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutReso\r\n          getDocByDayOutReso(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutReso(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutreso(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutReso(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutReso(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutreso(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n          //  InEdu\r\n          getDocByDayInEdu(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInEdu(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinedu(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInEdu(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInEdu(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutEdu\r\n          getDocByDayOutEdu(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutEdu(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutedu(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutEdu(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutEdu(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutedu(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n\r\n\r\n\r\n          //  InPlace\r\n          getDocByDayInPlace(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInPlace(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinplace(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInPlace(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInPlace(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutPlace\r\n          getDocByDayOutPlace(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutPlace(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutplace(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutPlace(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekOutPlace(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutplace(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })               \r\n\r\n          //  InSubj\r\n          getDocByDayInSubj(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinsubj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInSubj(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinsubj(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInSubj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinsubj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutSubj\r\n          getDocByDayOutSubj(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutsubj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutSubj(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutsubj(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutSubj(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutsubj(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })      \r\n              \r\n          //  InAle\r\n          getDocByDayInAle(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInAle(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinale(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInAle(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInAle(user.token)\r\n              .then((res) => {\r\n                  \r\n                    setDocbyweekinale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutAle\r\n          getDocByDayOutAle(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutAle(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutale(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutAle(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n           getDocByWeekOutAle(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutale(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n    \r\n\r\n\r\n          //  InRul\r\n          getDocByDayInRul(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayinrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthInRul(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthinrul(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearInRul(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearinrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByWeekInRul(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekinrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          //  OutRul\r\n          getDocByDayOutRul(user.token)\r\n              .then((res) => {\r\n                \r\n                  setDocbydayoutrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByMonthOutRul(user.token)\r\n              .then((res) => {\r\n                  \r\n                  setDocbymonthoutrul(res.data[0].count)\r\n                \r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })\r\n          getDocByYearOutRul(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyyearoutrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })    \r\n          getDocByWeekOutRul(user.token)\r\n              .then((res) => {\r\n\r\n                  setDocbyweekoutrul(res.data[0].count)\r\n\r\n              }).catch((err) => {\r\n                  console.log(err)\r\n              })    \r\n\r\n\r\n\r\n              \r\n    \r\n      \r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      const data = [\r\n        {\r\n          key: '1',\r\n          name: 'ด้านบริหารและธุรการ(ทั่วไป)',\r\n          countIn1: docbydayinperson,\r\n          countIn7: docbyweekinperson,\r\n          countIn30: docbymonthinperson,\r\n          countIn365: docbyyearinperson,\r\n          countOut1: docbydayoutperson,\r\n          countOut7: docbyweekoutperson,\r\n          countOut30: docbymonthoutperson,\r\n          countOut365: docbyyearoutperson,\r\n          \r\n          \r\n          \r\n        },\r\n        {\r\n          key: '2',\r\n          name: 'ด้านการเงิน',\r\n          countIn1: docbydayinmoney,\r\n          countIn7: docbyweekinmoney,\r\n          countIn30: docbymonthinmoney,\r\n          countIn365: docbyyearinmoney,\r\n          countOut1: docbydayoutmoney,\r\n          countOut7: docbyweekoutmoney,\r\n          countOut30: docbymonthoutmoney,\r\n          countOut365: docbyyearoutmoney,\r\n          \r\n          \r\n        },\r\n        {\r\n          key: '3',\r\n          name: 'ด้านพัสดุ',\r\n          countIn1: docbydayinobj,\r\n          countIn7: docbyweekinobj,\r\n          countIn30: docbymonthinobj,\r\n          countIn365: docbyyearinobj,\r\n          countOut1: docbydayoutobj,\r\n          countOut7: docbyweekoutobj,\r\n          countOut30: docbymonthoutobj,\r\n          countOut365: docbyyearoutobj,\r\n          \r\n          \r\n        },\r\n        {\r\n            key: '4',\r\n            name: 'ด้านวิจัย',\r\n            countIn1: docbydayinres,\r\n            countIn7: docbyweekinres,\r\n            countIn30: docbymonthinres,\r\n            countIn365: docbyyearinres,\r\n            countOut1: docbydayoutres,\r\n            countOut7: docbyweekoutres,\r\n            countOut30: docbymonthoutres,\r\n            countOut365: docbyyearoutres,\r\n            \r\n            \r\n          },\r\n        {\r\n          key: '5',\r\n          name: 'ด้านแผนยุทธศาสตร์',\r\n          countIn1: docbydayinplan,\r\n          countIn7: docbyweekinplan,\r\n          countIn30: docbymonthinplan,\r\n          countIn365: docbyyearinplan,\r\n          countOut1: docbydayoutplan,\r\n          countOut7: docbyweekoutplan,\r\n          countOut30: docbymonthoutplan,\r\n          countOut365: docbyyearoutplan,\r\n          \r\n          \r\n        },\r\n        {\r\n            key: '6',\r\n            name: 'ด้านทรัพยากรบุคคล',\r\n            countIn1: docbydayinreso,\r\n            countIn7: docbyweekinreso,\r\n            countIn30: docbymonthinreso,\r\n            countIn365: docbyyearinreso,\r\n            countOut1: docbydayoutreso,\r\n            countOut7: docbyweekoutreso,\r\n            countOut30: docbymonthoutreso,\r\n            countOut365: docbyyearoutreso,\r\n            \r\n            \r\n        },\r\n        {\r\n            key: '7',\r\n            name: 'ด้านการบริการการศึกษา',\r\n            countIn1: docbydayinedu,\r\n            countIn7: docbyweekinedu,\r\n            countIn30: docbymonthinedu,\r\n            countIn365: docbyyearinedu,\r\n            countOut1: docbydayoutedu,\r\n            countOut7: docbyweekoutedu,\r\n            countOut30: docbymonthoutedu,\r\n            countOut365: docbyyearoutedu,\r\n            \r\n            \r\n        },\r\n        {\r\n            key: '8',\r\n            name: 'ด้านอาคารสถานที่',\r\n            countIn1: docbydayinplace,\r\n            countIn7: docbyweekinplace,\r\n            countIn30: docbymonthinplace,\r\n            countIn365: docbyyearinplace,\r\n            countOut1: docbydayoutplace,\r\n            countOut7: docbyweekoutplace,\r\n            countOut30: docbymonthoutplace,\r\n            countOut365: docbyyearoutplace,\r\n            \r\n            \r\n        },\r\n        {\r\n            key: '9',\r\n            name: 'สาขาวิชาต่างๆ',\r\n            countIn1: docbydayinsubj,\r\n            countIn7: docbyweekinsubj,\r\n            countIn30: docbymonthinsubj,\r\n            countIn365: docbyyearinsubj,\r\n            countOut1: docbydayoutsubj,\r\n            countOut7: docbyweekoutsubj,\r\n            countOut30: docbymonthoutsubj,\r\n            countOut365: docbyyearoutsubj,\r\n            \r\n            \r\n        },\r\n        {\r\n            key: '10',\r\n            name: 'คำสั่งประกาศ',\r\n            countIn1: docbydayinale,\r\n            countIn7: docbyweekinale,\r\n            countIn30: docbymonthinale,\r\n            countIn365: docbyyearinale,\r\n            countOut1: docbydayoutale,\r\n            countOut7: docbyweekoutale,\r\n            countOut30: docbymonthoutale,\r\n            countOut365: docbyyearoutale,\r\n       \r\n        },\r\n        {\r\n            key: '11',\r\n            name: 'ระเบียบข้อบังคับ',\r\n            countIn1: docbydayinrul,\r\n            countIn7: docbyweekinrul,\r\n            countIn30: docbymonthinrul,\r\n            countIn365: docbyyearinrul,\r\n            countOut1: docbydayoutrul,\r\n            countOut7: docbyweekoutrul,\r\n            countOut30: docbymonthoutrul,\r\n            countOut365: docbyyearoutrul,\r\n            \r\n            \r\n        },\r\n      ];\r\n\r\n      \r\n\r\n  return <div>\r\n    <Table dataSource={data} size=\"small\" pagination={false}>\r\n    \r\n    <Column title=\"หมวดหมู่\" dataIndex=\"name\" key=\"name\" />\r\n    <ColumnGroup title=\"วันนี้\">\r\n      <Column title=\"รับเข้า\" dataIndex=\"countIn1\" key=\"countIn1\" />\r\n      <Column title=\"ส่งออก\" dataIndex=\"countOut1\" key=\"countOut1\" />\r\n    </ColumnGroup>\r\n\r\n    <ColumnGroup title=\"สัปดาห์นี้\">\r\n      <Column title=\"รับเข้า\" dataIndex=\"countIn7\" key=\"countIn7\" />\r\n      <Column title=\"ส่งออก\" dataIndex=\"countOut7\" key=\"countOut7\" />\r\n    </ColumnGroup>\r\n\r\n    <ColumnGroup title=\"เดือนนี้\">\r\n      <Column title=\"รับเข้า\" dataIndex=\"countIn30\" key=\"countIn30\" />\r\n      <Column title=\"ส่งออก\" dataIndex=\"countOut30\" key=\"countOut30\" />\r\n    </ColumnGroup>\r\n\r\n    <ColumnGroup title=\"ปีนี้\">\r\n      <Column title=\"รับเข้า\" dataIndex=\"countIn365\" key=\"countIn365\" />\r\n      <Column title=\"ส่งออก\" dataIndex=\"countOut365\" key=\"countOut365\" />\r\n    </ColumnGroup>\r\n\r\n  \r\n  </Table>\r\n        \r\n      \r\n        \r\n      </div>;\r\n};\r\n\r\nexport default Summary","C:\\Users\\false\\Desktop\\OCR-New-Kop\\client\\src\\functions\\summary.js",[],{"ruleId":"1189","severity":1,"message":"1190","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":13},{"ruleId":"1193","replacedBy":"1194"},{"ruleId":"1195","replacedBy":"1196"},{"ruleId":"1189","severity":1,"message":"1197","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1198","line":7,"column":8,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1199","line":8,"column":8,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1200","line":9,"column":8,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":12},{"ruleId":"1189","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1191","messageId":"1192","endLine":21,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1202","line":22,"column":8,"nodeType":"1191","messageId":"1192","endLine":22,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1203","line":23,"column":8,"nodeType":"1191","messageId":"1192","endLine":23,"endColumn":25},{"ruleId":"1189","severity":1,"message":"1204","line":25,"column":8,"nodeType":"1191","messageId":"1192","endLine":25,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1205","line":2,"column":17,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":26},{"ruleId":"1189","severity":1,"message":"1206","line":3,"column":9,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1207","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1208","line":5,"column":8,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1209","line":9,"column":5,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":8},{"ruleId":"1189","severity":1,"message":"1210","line":10,"column":5,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":8},{"ruleId":"1189","severity":1,"message":"1211","line":11,"column":5,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":9},{"ruleId":"1189","severity":1,"message":"1212","line":12,"column":5,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":10},{"ruleId":"1189","severity":1,"message":"1197","line":13,"column":5,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":11},{"ruleId":"1189","severity":1,"message":"1213","line":14,"column":5,"nodeType":"1191","messageId":"1192","endLine":14,"endColumn":11},{"ruleId":"1189","severity":1,"message":"1214","line":17,"column":8,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1215","line":77,"column":11,"nodeType":"1191","messageId":"1192","endLine":77,"endColumn":30},{"ruleId":"1216","severity":1,"message":"1217","line":91,"column":25,"nodeType":"1218","endLine":91,"endColumn":124},{"ruleId":"1219","severity":1,"message":"1220","line":113,"column":33,"nodeType":"1218","endLine":115,"endColumn":35},{"ruleId":"1189","severity":1,"message":"1221","line":4,"column":10,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1222","line":4,"column":24,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":39},{"ruleId":"1189","severity":1,"message":"1213","line":5,"column":10,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1223","line":7,"column":10,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1224","line":12,"column":10,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1225","line":16,"column":9,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":16},{"ruleId":"1216","severity":1,"message":"1217","line":39,"column":25,"nodeType":"1218","endLine":39,"endColumn":113},{"ruleId":"1226","severity":1,"message":"1227","line":47,"column":29,"nodeType":"1218","endLine":47,"endColumn":74},{"ruleId":"1189","severity":1,"message":"1228","line":38,"column":8,"nodeType":"1191","messageId":"1192","endLine":38,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1233","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":25},{"ruleId":"1189","severity":1,"message":"1234","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":10,"column":26,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":20,"column":12,"nodeType":"1191","messageId":"1192","endLine":20,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":21,"column":12,"nodeType":"1191","messageId":"1192","endLine":21,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":23,"column":23,"nodeType":"1191","messageId":"1192","endLine":23,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":30,"column":12,"nodeType":"1191","messageId":"1192","endLine":30,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":8,"nodeType":"1243","endLine":37,"endColumn":10,"suggestions":"1244"},{"ruleId":"1189","severity":1,"message":"1245","line":81,"column":11,"nodeType":"1191","messageId":"1192","endLine":81,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":10,"column":26,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1239","line":20,"column":23,"nodeType":"1191","messageId":"1192","endLine":20,"endColumn":34},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":8,"nodeType":"1243","endLine":31,"endColumn":10,"suggestions":"1246"},{"ruleId":"1189","severity":1,"message":"1247","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1210","line":7,"column":10,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1248","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1249","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1206","line":12,"column":10,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1250","line":13,"column":10,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1251","line":17,"column":10,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1252","line":34,"column":12,"nodeType":"1191","messageId":"1192","endLine":34,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1253","line":34,"column":18,"nodeType":"1191","messageId":"1192","endLine":34,"endColumn":25},{"ruleId":"1189","severity":1,"message":"1239","line":35,"column":22,"nodeType":"1191","messageId":"1192","endLine":35,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1254","line":6,"column":8,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1255","line":8,"column":8,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1256","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":32,"column":10,"nodeType":"1243","endLine":32,"endColumn":12,"suggestions":"1258"},{"ruleId":"1241","severity":1,"message":"1242","line":51,"column":10,"nodeType":"1243","endLine":51,"endColumn":12,"suggestions":"1259"},{"ruleId":"1260","severity":1,"message":"1261","line":143,"column":21,"nodeType":"1218","endLine":143,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1233","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":25},{"ruleId":"1189","severity":1,"message":"1234","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":10,"column":26,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":20,"column":12,"nodeType":"1191","messageId":"1192","endLine":20,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":21,"column":12,"nodeType":"1191","messageId":"1192","endLine":21,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":23,"column":23,"nodeType":"1191","messageId":"1192","endLine":23,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":30,"column":12,"nodeType":"1191","messageId":"1192","endLine":30,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":8,"nodeType":"1243","endLine":37,"endColumn":10,"suggestions":"1262"},{"ruleId":"1189","severity":1,"message":"1245","line":81,"column":11,"nodeType":"1191","messageId":"1192","endLine":81,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1263","line":3,"column":8,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1264","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1265","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1266","line":10,"column":35,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":49},{"ruleId":"1189","severity":1,"message":"1267","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":28},{"ruleId":"1189","severity":1,"message":"1268","line":13,"column":26,"nodeType":"1191","messageId":"1192","endLine":13,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1231","line":18,"column":46,"nodeType":"1191","messageId":"1192","endLine":18,"endColumn":52},{"ruleId":"1189","severity":1,"message":"1232","line":18,"column":54,"nodeType":"1191","messageId":"1192","endLine":18,"endColumn":59},{"ruleId":"1189","severity":1,"message":"1224","line":18,"column":61,"nodeType":"1191","messageId":"1192","endLine":18,"endColumn":67},{"ruleId":"1189","severity":1,"message":"1213","line":18,"column":68,"nodeType":"1191","messageId":"1192","endLine":18,"endColumn":74},{"ruleId":"1189","severity":1,"message":"1269","line":18,"column":76,"nodeType":"1191","messageId":"1192","endLine":18,"endColumn":83},{"ruleId":"1189","severity":1,"message":"1234","line":19,"column":10,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":19,"column":26,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1270","line":21,"column":10,"nodeType":"1191","messageId":"1192","endLine":21,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1237","line":37,"column":10,"nodeType":"1191","messageId":"1192","endLine":37,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1271","line":37,"column":19,"nodeType":"1191","messageId":"1192","endLine":37,"endColumn":29},{"ruleId":"1189","severity":1,"message":"1272","line":40,"column":19,"nodeType":"1191","messageId":"1192","endLine":40,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":44,"column":6,"nodeType":"1243","endLine":44,"endColumn":8,"suggestions":"1273"},{"ruleId":"1274","severity":1,"message":"1275","line":149,"column":11,"nodeType":"1276","endLine":149,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":220,"column":21,"nodeType":"1218","endLine":220,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":229,"column":21,"nodeType":"1218","endLine":229,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1277"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":98,"column":16,"nodeType":"1191","messageId":"1192","endLine":98,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":102,"column":16,"nodeType":"1191","messageId":"1192","endLine":102,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1280"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":100,"column":16,"nodeType":"1191","messageId":"1192","endLine":100,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":104,"column":16,"nodeType":"1191","messageId":"1192","endLine":104,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1281"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":170,"column":16,"nodeType":"1191","messageId":"1192","endLine":170,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":174,"column":16,"nodeType":"1191","messageId":"1192","endLine":174,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1283"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":35,"column":10,"nodeType":"1243","endLine":35,"endColumn":12,"suggestions":"1284"},{"ruleId":"1241","severity":1,"message":"1242","line":50,"column":10,"nodeType":"1243","endLine":50,"endColumn":12,"suggestions":"1285"},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1286"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1287"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":99,"column":16,"nodeType":"1191","messageId":"1192","endLine":99,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":103,"column":16,"nodeType":"1191","messageId":"1192","endLine":103,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":10,"nodeType":"1243","endLine":31,"endColumn":12,"suggestions":"1288"},{"ruleId":"1241","severity":1,"message":"1242","line":50,"column":10,"nodeType":"1243","endLine":50,"endColumn":12,"suggestions":"1289"},{"ruleId":"1260","severity":1,"message":"1261","line":141,"column":21,"nodeType":"1218","endLine":141,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1290"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1291"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":30,"column":10,"nodeType":"1243","endLine":30,"endColumn":12,"suggestions":"1292"},{"ruleId":"1241","severity":1,"message":"1242","line":49,"column":10,"nodeType":"1243","endLine":49,"endColumn":12,"suggestions":"1293"},{"ruleId":"1260","severity":1,"message":"1261","line":138,"column":21,"nodeType":"1218","endLine":138,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1294"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":10,"nodeType":"1243","endLine":31,"endColumn":12,"suggestions":"1295"},{"ruleId":"1241","severity":1,"message":"1242","line":50,"column":10,"nodeType":"1243","endLine":50,"endColumn":12,"suggestions":"1296"},{"ruleId":"1260","severity":1,"message":"1261","line":141,"column":21,"nodeType":"1218","endLine":141,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1297"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1298"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":30,"column":10,"nodeType":"1243","endLine":30,"endColumn":12,"suggestions":"1299"},{"ruleId":"1241","severity":1,"message":"1242","line":49,"column":10,"nodeType":"1243","endLine":49,"endColumn":12,"suggestions":"1300"},{"ruleId":"1260","severity":1,"message":"1261","line":139,"column":21,"nodeType":"1218","endLine":139,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1301"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1302"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":100,"column":16,"nodeType":"1191","messageId":"1192","endLine":100,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":104,"column":16,"nodeType":"1191","messageId":"1192","endLine":104,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":10,"nodeType":"1243","endLine":31,"endColumn":12,"suggestions":"1303"},{"ruleId":"1241","severity":1,"message":"1242","line":46,"column":10,"nodeType":"1243","endLine":46,"endColumn":12,"suggestions":"1304"},{"ruleId":"1260","severity":1,"message":"1261","line":138,"column":21,"nodeType":"1218","endLine":138,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":10,"nodeType":"1243","endLine":31,"endColumn":12,"suggestions":"1305"},{"ruleId":"1241","severity":1,"message":"1242","line":49,"column":10,"nodeType":"1243","endLine":49,"endColumn":12,"suggestions":"1306"},{"ruleId":"1260","severity":1,"message":"1261","line":139,"column":21,"nodeType":"1218","endLine":139,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":30,"column":10,"nodeType":"1243","endLine":30,"endColumn":12,"suggestions":"1307"},{"ruleId":"1241","severity":1,"message":"1242","line":49,"column":10,"nodeType":"1243","endLine":49,"endColumn":12,"suggestions":"1308"},{"ruleId":"1260","severity":1,"message":"1261","line":140,"column":21,"nodeType":"1218","endLine":140,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1309"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1310"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1311"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":31,"column":10,"nodeType":"1243","endLine":31,"endColumn":12,"suggestions":"1312"},{"ruleId":"1241","severity":1,"message":"1242","line":50,"column":10,"nodeType":"1243","endLine":50,"endColumn":12,"suggestions":"1313"},{"ruleId":"1260","severity":1,"message":"1261","line":141,"column":21,"nodeType":"1218","endLine":141,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1314"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":100,"column":16,"nodeType":"1191","messageId":"1192","endLine":100,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":104,"column":16,"nodeType":"1191","messageId":"1192","endLine":104,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1315"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":100,"column":16,"nodeType":"1191","messageId":"1192","endLine":100,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":104,"column":16,"nodeType":"1191","messageId":"1192","endLine":104,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1316"},{"ruleId":"1189","severity":1,"message":"1282","line":89,"column":11,"nodeType":"1191","messageId":"1192","endLine":89,"endColumn":18},{"ruleId":"1260","severity":1,"message":"1261","line":142,"column":21,"nodeType":"1218","endLine":142,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1278","line":169,"column":16,"nodeType":"1191","messageId":"1192","endLine":169,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":173,"column":16,"nodeType":"1191","messageId":"1192","endLine":173,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1257","line":11,"column":10,"nodeType":"1191","messageId":"1192","endLine":11,"endColumn":22},{"ruleId":"1241","severity":1,"message":"1242","line":30,"column":10,"nodeType":"1243","endLine":30,"endColumn":12,"suggestions":"1317"},{"ruleId":"1241","severity":1,"message":"1242","line":49,"column":10,"nodeType":"1243","endLine":49,"endColumn":12,"suggestions":"1318"},{"ruleId":"1260","severity":1,"message":"1261","line":139,"column":21,"nodeType":"1218","endLine":139,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1229","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":6,"column":10,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":6,"column":17,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":6,"column":25,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1234","line":9,"column":10,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1236","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1237","line":16,"column":12,"nodeType":"1191","messageId":"1192","endLine":16,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1238","line":17,"column":12,"nodeType":"1191","messageId":"1192","endLine":17,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1239","line":19,"column":23,"nodeType":"1191","messageId":"1192","endLine":19,"endColumn":34},{"ruleId":"1189","severity":1,"message":"1240","line":26,"column":12,"nodeType":"1191","messageId":"1192","endLine":26,"endColumn":20},{"ruleId":"1241","severity":1,"message":"1242","line":33,"column":8,"nodeType":"1243","endLine":33,"endColumn":10,"suggestions":"1319"},{"ruleId":"1189","severity":1,"message":"1245","line":74,"column":11,"nodeType":"1191","messageId":"1192","endLine":74,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1278","line":100,"column":16,"nodeType":"1191","messageId":"1192","endLine":100,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1279","line":104,"column":16,"nodeType":"1191","messageId":"1192","endLine":104,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1320","line":3,"column":10,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1321","line":5,"column":10,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1322"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1323"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1324"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1325"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1326"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1327"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1328"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1329"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":33,"column":19,"nodeType":"1191","messageId":"1192","endLine":33,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":37,"column":6,"nodeType":"1243","endLine":37,"endColumn":8,"suggestions":"1330"},{"ruleId":"1274","severity":1,"message":"1275","line":142,"column":11,"nodeType":"1276","endLine":142,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":213,"column":21,"nodeType":"1218","endLine":213,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":222,"column":21,"nodeType":"1218","endLine":222,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1268","line":9,"column":26,"nodeType":"1191","messageId":"1192","endLine":9,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1234","line":15,"column":10,"nodeType":"1191","messageId":"1192","endLine":15,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1235","line":15,"column":26,"nodeType":"1191","messageId":"1192","endLine":15,"endColumn":42},{"ruleId":"1189","severity":1,"message":"1272","line":34,"column":19,"nodeType":"1191","messageId":"1192","endLine":34,"endColumn":30},{"ruleId":"1241","severity":1,"message":"1242","line":38,"column":6,"nodeType":"1243","endLine":38,"endColumn":8,"suggestions":"1331"},{"ruleId":"1274","severity":1,"message":"1275","line":143,"column":11,"nodeType":"1276","endLine":143,"endColumn":33},{"ruleId":"1260","severity":1,"message":"1261","line":214,"column":21,"nodeType":"1218","endLine":214,"endColumn":94},{"ruleId":"1260","severity":1,"message":"1261","line":223,"column":21,"nodeType":"1218","endLine":223,"endColumn":94},{"ruleId":"1189","severity":1,"message":"1213","line":2,"column":10,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":16},{"ruleId":"1216","severity":1,"message":"1217","line":29,"column":25,"nodeType":"1218","endLine":29,"endColumn":103},{"ruleId":"1226","severity":1,"message":"1227","line":37,"column":29,"nodeType":"1218","endLine":37,"endColumn":74},{"ruleId":"1189","severity":1,"message":"1213","line":8,"column":8,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1332","line":21,"column":7,"nodeType":"1191","messageId":"1192","endLine":21,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1333","line":57,"column":11,"nodeType":"1191","messageId":"1192","endLine":57,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1256","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1219","severity":1,"message":"1220","line":10,"column":21,"nodeType":"1218","endLine":10,"endColumn":53},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1334"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1335"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1336","line":2,"column":13,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1337","line":4,"column":13,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1230","line":8,"column":10,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":8,"column":17,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":8,"column":25,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1338"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1339"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1340"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1221","line":4,"column":10,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1222","line":4,"column":24,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":39},{"ruleId":"1189","severity":1,"message":"1213","line":5,"column":10,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":16},{"ruleId":"1189","severity":1,"message":"1223","line":7,"column":10,"nodeType":"1191","messageId":"1192","endLine":7,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1225","line":12,"column":9,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":16},{"ruleId":"1216","severity":1,"message":"1217","line":34,"column":25,"nodeType":"1218","endLine":34,"endColumn":113},{"ruleId":"1226","severity":1,"message":"1227","line":42,"column":29,"nodeType":"1218","endLine":42,"endColumn":74},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1341"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1219","severity":1,"message":"1220","line":10,"column":21,"nodeType":"1218","endLine":10,"endColumn":53},{"ruleId":"1189","severity":1,"message":"1342","line":2,"column":3,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":11},{"ruleId":"1189","severity":1,"message":"1343","line":3,"column":3,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":11},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1344"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1345"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1346"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1347"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1343","line":3,"column":3,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":11},{"ruleId":"1189","severity":1,"message":"1230","line":8,"column":10,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":8,"column":17,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":8,"column":25,"nodeType":"1191","messageId":"1192","endLine":8,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1238","line":12,"column":12,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":18},{"ruleId":"1241","severity":1,"message":"1242","line":16,"column":8,"nodeType":"1243","endLine":16,"endColumn":10,"suggestions":"1348"},{"ruleId":"1260","severity":1,"message":"1261","line":38,"column":16,"nodeType":"1218","endLine":38,"endColumn":91},{"ruleId":"1189","severity":1,"message":"1349","line":1,"column":8,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":13},{"ruleId":"1189","severity":1,"message":"1350","line":1,"column":17,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":25},{"ruleId":"1189","severity":1,"message":"1351","line":1,"column":27,"nodeType":"1191","messageId":"1192","endLine":1,"endColumn":36},{"ruleId":"1189","severity":1,"message":"1352","line":3,"column":10,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":19},{"ruleId":"1189","severity":1,"message":"1320","line":4,"column":10,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1230","line":5,"column":10,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":15},{"ruleId":"1189","severity":1,"message":"1231","line":5,"column":17,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1232","line":5,"column":25,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":30},{"ruleId":"1189","severity":1,"message":"1353","line":2,"column":8,"nodeType":"1191","messageId":"1192","endLine":2,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1354","line":3,"column":10,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1213","line":3,"column":38,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":44},{"ruleId":"1189","severity":1,"message":"1355","line":3,"column":53,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":58},{"ruleId":"1189","severity":1,"message":"1232","line":3,"column":60,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":65},{"ruleId":"1189","severity":1,"message":"1356","line":3,"column":67,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":70},{"ruleId":"1189","severity":1,"message":"1357","line":3,"column":72,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":77},{"ruleId":"1189","severity":1,"message":"1358","line":3,"column":79,"nodeType":"1191","messageId":"1192","endLine":3,"endColumn":89},{"ruleId":"1189","severity":1,"message":"1359","line":4,"column":8,"nodeType":"1191","messageId":"1192","endLine":4,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1236","line":5,"column":10,"nodeType":"1191","messageId":"1192","endLine":5,"endColumn":38},{"ruleId":"1189","severity":1,"message":"1229","line":6,"column":8,"nodeType":"1191","messageId":"1192","endLine":6,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1257","line":10,"column":10,"nodeType":"1191","messageId":"1192","endLine":10,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1223","line":12,"column":10,"nodeType":"1191","messageId":"1192","endLine":12,"endColumn":14},{"ruleId":"1189","severity":1,"message":"1360","line":37,"column":70,"nodeType":"1191","messageId":"1192","endLine":37,"endColumn":88},{"ruleId":"1189","severity":1,"message":"1361","line":38,"column":68,"nodeType":"1191","messageId":"1192","endLine":38,"endColumn":87},{"ruleId":"1189","severity":1,"message":"1362","line":47,"column":12,"nodeType":"1191","messageId":"1192","endLine":47,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1363","line":47,"column":24,"nodeType":"1191","messageId":"1192","endLine":47,"endColumn":37},{"ruleId":"1189","severity":1,"message":"1364","line":48,"column":12,"nodeType":"1191","messageId":"1192","endLine":48,"endColumn":20},{"ruleId":"1189","severity":1,"message":"1365","line":48,"column":22,"nodeType":"1191","messageId":"1192","endLine":48,"endColumn":33},{"ruleId":"1189","severity":1,"message":"1366","line":49,"column":12,"nodeType":"1191","messageId":"1192","endLine":49,"endColumn":22},{"ruleId":"1189","severity":1,"message":"1367","line":49,"column":24,"nodeType":"1191","messageId":"1192","endLine":49,"endColumn":37},{"ruleId":"1189","severity":1,"message":"1368","line":50,"column":13,"nodeType":"1191","messageId":"1192","endLine":50,"endColumn":24},{"ruleId":"1189","severity":1,"message":"1369","line":51,"column":12,"nodeType":"1191","messageId":"1192","endLine":51,"endColumn":21},{"ruleId":"1189","severity":1,"message":"1370","line":53,"column":12,"nodeType":"1191","messageId":"1192","endLine":53,"endColumn":17},{"ruleId":"1189","severity":1,"message":"1371","line":53,"column":19,"nodeType":"1191","messageId":"1192","endLine":53,"endColumn":27},{"ruleId":"1189","severity":1,"message":"1238","line":54,"column":12,"nodeType":"1191","messageId":"1192","endLine":54,"endColumn":18},{"ruleId":"1189","severity":1,"message":"1372","line":142,"column":30,"nodeType":"1191","messageId":"1192","endLine":142,"endColumn":48},{"ruleId":"1189","severity":1,"message":"1373","line":147,"column":31,"nodeType":"1191","messageId":"1192","endLine":147,"endColumn":50},{"ruleId":"1241","severity":1,"message":"1374","line":177,"column":10,"nodeType":"1243","endLine":177,"endColumn":12,"suggestions":"1375"},{"ruleId":"1189","severity":1,"message":"1376","line":198,"column":11,"nodeType":"1191","messageId":"1192","endLine":198,"endColumn":23},{"ruleId":"1189","severity":1,"message":"1377","line":208,"column":13,"nodeType":"1191","messageId":"1192","endLine":208,"endColumn":25},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1378"],"no-negated-in-lhs",["1379"],"'Layout' is defined but never used.","'RealAdminNav' is defined but never used.","'Navbar' is defined but never used.","'Home' is defined but never used.","'AdminDashboard' is defined but never used.","'DocUpload' is defined but never used.","'AdminCreatePerson' is defined but never used.","'Upload1' is defined but never used.","'Component' is defined but never used.","'Upload' is defined but never used.","'ButtonGroup2' is defined but never used.","'Button2' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'styled' is defined but never used.","'onChangeTwiceButton' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'HomeOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'SubMenu' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'AdminRoute' is defined but never used.","'DownloadLink' is defined but never used.","'Table' is defined but never used.","'Avatar' is defined but never used.","'Image' is defined but never used.","'ocrBeforeUpload' is defined but never used.","'DeleteOutlined' is defined but never used.","'VerifiedOutlined' is defined but never used.","'AiOutlineVerticalAlignBottom' is defined but never used.","'loading' is assigned a value but never used.","'person' is assigned a value but never used.","'setFilename' is assigned a value but never used.","'numPages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.token'. Either include it or remove the dependency array.","ArrayExpression",["1380"],"'handleRemove' is assigned a value but never used.",["1381"],"'Checkbox' is defined but never used.","'InputNumber' is defined but never used.","'Divider' is defined but never used.","'message' is defined but never used.","'UploadOutlined' is defined but never used.","'file' is assigned a value but never used.","'setFile' is assigned a value but never used.","'Sidebar' is defined but never used.","'HeaderTop' is defined but never used.","'Header' is defined but never used.","'PlusOutlined' is defined but never used.",["1382"],["1383"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["1384"],"'CardDatas' is defined but never used.","'NewCardDatas' is defined but never used.","'AiOutlineInsertRowBelow' is defined but never used.","'AiOutlineBlock' is defined but never used.","'MdOutlineTableRows' is defined but never used.","'setDefaultLocale' is defined but never used.","'Tooltip' is defined but never used.","'removePerson' is defined but never used.","'setLoading' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.",["1385"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["1386"],"'changePageBack' is defined but never used.","'changePageNext' is defined but never used.",["1387"],["1388"],"'columns' is assigned a value but never used.",["1389"],["1390"],["1391"],["1392"],["1393"],["1394"],["1395"],["1396"],["1397"],["1398"],["1399"],["1400"],["1401"],["1402"],["1403"],["1404"],["1405"],["1406"],["1407"],["1408"],["1409"],["1410"],["1411"],["1412"],["1413"],["1414"],["1415"],["1416"],["1417"],["1418"],["1419"],["1420"],["1421"],["1422"],["1423"],["1424"],["1425"],"'toast' is defined but never used.","'currentUser' is defined but never used.",["1426"],["1427"],["1428"],["1429"],["1430"],["1431"],["1432"],["1433"],["1434"],["1435"],"'NavIcon' is assigned a value but never used.","'showSidebar' is assigned a value but never used.",["1436"],["1437"],"'FaIcons' is defined but never used.","'IoIcons' is defined but never used.",["1438"],["1439"],["1440"],["1441"],"'HomeIcon' is defined but never used.","'UserIcon' is defined but never used.",["1442"],["1443"],["1444"],["1445"],["1446"],"'React' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'getPerson' is defined but never used.","'SearchBox' is defined but never used.","'ConfigProvider' is defined but never used.","'Radio' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'Pagination' is defined but never used.","'locale' is defined but never used.","'getDocByWeekInSubj' is defined but never used.","'getDocByWeekOutSubj' is defined but never used.","'searchText' is assigned a value but never used.","'setSearchText' is assigned a value but never used.","'searchNo' is assigned a value but never used.","'setSearchNo' is assigned a value but never used.","'searchFrom' is assigned a value but never used.","'setSearchFrom' is assigned a value but never used.","'RangePicker' is assigned a value but never used.","'hackValue' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'setDocbyweekinsubj' is assigned a value but never used.","'setDocbyweekoutsubj' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getValueOfDocumentSummary' and 'user.token'. Either include them or remove the dependency array.",["1447"],"'disabledDate' is assigned a value but never used.","'onOpenChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1448","fix":"1449"},{"desc":"1448","fix":"1450"},{"desc":"1448","fix":"1451"},{"desc":"1448","fix":"1452"},{"desc":"1448","fix":"1453"},{"desc":"1448","fix":"1454"},{"desc":"1448","fix":"1455"},{"desc":"1448","fix":"1456"},{"desc":"1448","fix":"1457"},{"desc":"1448","fix":"1458"},{"desc":"1448","fix":"1459"},{"desc":"1448","fix":"1460"},{"desc":"1448","fix":"1461"},{"desc":"1448","fix":"1462"},{"desc":"1448","fix":"1463"},{"desc":"1448","fix":"1464"},{"desc":"1448","fix":"1465"},{"desc":"1448","fix":"1466"},{"desc":"1448","fix":"1467"},{"desc":"1448","fix":"1468"},{"desc":"1448","fix":"1469"},{"desc":"1448","fix":"1470"},{"desc":"1448","fix":"1471"},{"desc":"1448","fix":"1472"},{"desc":"1448","fix":"1473"},{"desc":"1448","fix":"1474"},{"desc":"1448","fix":"1475"},{"desc":"1448","fix":"1476"},{"desc":"1448","fix":"1477"},{"desc":"1448","fix":"1478"},{"desc":"1448","fix":"1479"},{"desc":"1448","fix":"1480"},{"desc":"1448","fix":"1481"},{"desc":"1448","fix":"1482"},{"desc":"1448","fix":"1483"},{"desc":"1448","fix":"1484"},{"desc":"1448","fix":"1485"},{"desc":"1448","fix":"1486"},{"desc":"1448","fix":"1487"},{"desc":"1448","fix":"1488"},{"desc":"1448","fix":"1489"},{"desc":"1448","fix":"1490"},{"desc":"1448","fix":"1491"},{"desc":"1448","fix":"1492"},{"desc":"1448","fix":"1493"},{"desc":"1448","fix":"1494"},{"desc":"1448","fix":"1495"},{"desc":"1448","fix":"1496"},{"desc":"1448","fix":"1497"},{"desc":"1448","fix":"1498"},{"desc":"1448","fix":"1499"},{"desc":"1448","fix":"1500"},{"desc":"1448","fix":"1501"},{"desc":"1448","fix":"1502"},{"desc":"1448","fix":"1503"},{"desc":"1448","fix":"1504"},{"desc":"1448","fix":"1505"},{"desc":"1448","fix":"1506"},{"desc":"1448","fix":"1507"},{"desc":"1448","fix":"1508"},{"desc":"1448","fix":"1509"},{"desc":"1448","fix":"1510"},{"desc":"1448","fix":"1511"},{"desc":"1448","fix":"1512"},{"desc":"1448","fix":"1513"},{"desc":"1448","fix":"1514"},{"desc":"1448","fix":"1515"},{"desc":"1516","fix":"1517"},"Update the dependencies array to be: [user.token]",{"range":"1518","text":"1519"},{"range":"1520","text":"1519"},{"range":"1521","text":"1519"},{"range":"1522","text":"1519"},{"range":"1523","text":"1519"},{"range":"1524","text":"1519"},{"range":"1525","text":"1519"},{"range":"1526","text":"1519"},{"range":"1527","text":"1519"},{"range":"1528","text":"1519"},{"range":"1529","text":"1519"},{"range":"1530","text":"1519"},{"range":"1531","text":"1519"},{"range":"1532","text":"1519"},{"range":"1533","text":"1519"},{"range":"1534","text":"1519"},{"range":"1535","text":"1519"},{"range":"1536","text":"1519"},{"range":"1537","text":"1519"},{"range":"1538","text":"1519"},{"range":"1539","text":"1519"},{"range":"1540","text":"1519"},{"range":"1541","text":"1519"},{"range":"1542","text":"1519"},{"range":"1543","text":"1519"},{"range":"1544","text":"1519"},{"range":"1545","text":"1519"},{"range":"1546","text":"1519"},{"range":"1547","text":"1519"},{"range":"1548","text":"1519"},{"range":"1549","text":"1519"},{"range":"1550","text":"1519"},{"range":"1551","text":"1519"},{"range":"1552","text":"1519"},{"range":"1553","text":"1519"},{"range":"1554","text":"1519"},{"range":"1555","text":"1519"},{"range":"1556","text":"1519"},{"range":"1557","text":"1519"},{"range":"1558","text":"1519"},{"range":"1559","text":"1519"},{"range":"1560","text":"1519"},{"range":"1561","text":"1519"},{"range":"1562","text":"1519"},{"range":"1563","text":"1519"},{"range":"1564","text":"1519"},{"range":"1565","text":"1519"},{"range":"1566","text":"1519"},{"range":"1567","text":"1519"},{"range":"1568","text":"1519"},{"range":"1569","text":"1519"},{"range":"1570","text":"1519"},{"range":"1571","text":"1519"},{"range":"1572","text":"1519"},{"range":"1573","text":"1519"},{"range":"1574","text":"1519"},{"range":"1575","text":"1519"},{"range":"1576","text":"1519"},{"range":"1577","text":"1519"},{"range":"1578","text":"1519"},{"range":"1579","text":"1519"},{"range":"1580","text":"1519"},{"range":"1581","text":"1519"},{"range":"1582","text":"1519"},{"range":"1583","text":"1519"},{"range":"1584","text":"1519"},{"range":"1585","text":"1519"},"Update the dependencies array to be: [getValueOfDocumentSummary, user.token]",{"range":"1586","text":"1587"},[1446,1448],"[user.token]",[1167,1169],[1333,1335],[1798,1800],[1458,1460],[2099,2101],[1381,1383],[1388,1390],[1384,1386],[1377,1379],[1410,1412],[1791,1793],[1377,1379],[1381,1383],[1333,1335],[1798,1800],[1381,1383],[1385,1387],[1327,1329],[1792,1794],[1381,1383],[1329,1331],[1793,1795],[1385,1387],[1377,1379],[1331,1333],[1797,1799],[1385,1387],[1381,1383],[1337,1339],[1720,1722],[1329,1331],[1791,1793],[1327,1329],[1792,1794],[1381,1383],[1377,1379],[1389,1391],[1329,1331],[1793,1795],[1385,1387],[1381,1383],[1377,1379],[1323,1325],[1787,1789],[1381,1383],[1546,1548],[1546,1548],[1550,1552],[1546,1548],[1548,1550],[1548,1550],[1548,1550],[1546,1548],[1546,1548],[1623,1625],[577,579],[577,579],[625,627],[579,581],[579,581],[579,581],[577,579],[581,583],[577,579],[577,579],[620,622],[9927,9929],"[getValueOfDocumentSummary, user.token]"]