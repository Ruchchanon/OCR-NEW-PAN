{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\auth\\\\Register.js\";\nimport React from 'react';\nimport { Form, Input, Button, Row, Col, Card } from 'antd'; //functions\n\nimport { registerHandler } from '../../functions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = _ref => {\n  let {\n    history\n  } = _ref;\n\n  const onFinish = values => {\n    console.log('Success:', values);\n\n    if (values.password !== values.password2) {\n      return alert('not match');\n    } else {\n      console.log('Success', values);\n      registerHandler(values).then(res => {\n        console.log(res);\n        history.push('/log');\n      }).catch(err => {\n        console.log(err.response.data);\n      });\n    }\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Username\",\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"Password\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"ConfirmPassword\",\n            name: \"password2\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/auth/Register.js"],"names":["React","Form","Input","Button","Row","Col","Card","registerHandler","Register","history","onFinish","values","console","log","password","password2","alert","then","res","push","catch","err","response","data","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Form, \r\n        Input, \r\n        Button, \r\n        Row,\r\n        Col,\r\n        Card\r\n} from 'antd';\r\n\r\n//functions\r\nimport { registerHandler } from '../../functions/auth';\r\n\r\nconst Register = ({history}) => {\r\n    const onFinish = (values) => {\r\n        console.log('Success:', values);\r\n        if (values.password !== values.password2 ) {\r\n            return alert('not match')\r\n        } else {\r\n            console.log('Success', values);\r\n            registerHandler(values)\r\n            .then(res => {\r\n                console.log(res)\r\n                history.push('/log')\r\n            }).catch(err => {\r\n                console.log(err.response.data)\r\n            })\r\n        }\r\n      };\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n      };\r\n\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col>\r\n                <Card>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 8,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        >\r\n                    <Form.Item\r\n                        label=\"Username\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your username!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"ConfirmPassword\"\r\n                        name=\"password2\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    \r\n                    \r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}