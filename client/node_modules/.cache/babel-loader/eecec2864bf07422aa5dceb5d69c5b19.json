{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Navbar from \"./layout/Navbar\";\nimport Home from \"./pages/Home\"; //Redux\n\nimport { useDispatch } from 'react-redux'; // Router\n\nimport { Switch, Route } from 'react-router-dom'; //Pages\n\nimport Login from \"./pages/auth/Login\";\nimport Register from \"./pages/auth/Register\"; //Admin\n\nimport AdminDashboard from './pages/admin/AdminDashboard';\nimport DocUpload from './pages/admin/DocUpload';\nimport AdminCreatePerson from './pages/admin/AdminCreatePerson'; //User\n\nimport HomeUser from \"./pages/user/HomeUser\"; //function\n\nimport { currentUser } from './functions/auth'; //Route\n\nimport UserRoute from './components/routes/UserRoute';\nimport AdminRoute from './components/routes/AdminRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch(); //const idTokenResult = localStorage.token;\n  //console.log('APP.js', idTokenResult)\n\n  useEffect(() => {\n    const idTokenResult = localStorage.token;\n\n    if (idTokenResult) {\n      currentUser(idTokenResult).then(res => {\n        console.log(res.data);\n        dispatch({\n          type: 'LOGGED_IN_USER',\n          payload: {\n            name: res.data.name,\n            role: res.data.role,\n            token: idTokenResult\n          }\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/Register\",\n        component: Register\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/home-admin\",\n        component: AdminDashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/admin/creat-person\",\n        component: AdminCreatePerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AdminRoute, {\n        exact: true,\n        path: \"/upload\",\n        component: DocUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserRoute, {\n        exact: true,\n        path: \"/home-user\",\n        component: HomeUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/App.js"],"names":["React","useEffect","Navbar","Home","useDispatch","Switch","Route","Login","Register","AdminDashboard","DocUpload","AdminCreatePerson","HomeUser","currentUser","UserRoute","AdminRoute","App","dispatch","idTokenResult","localStorage","token","then","res","console","log","data","type","payload","name","role","catch","err"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport Navbar from \"./layout/Navbar\";\nimport Home  from \"./pages/Home\";\n\n//Redux\nimport { useDispatch } from 'react-redux';\n\n// Router\nimport { Switch, Route } from 'react-router-dom';\n//Pages\nimport Login from \"./pages/auth/Login\";\nimport Register from \"./pages/auth/Register\";\n\n//Admin\nimport AdminDashboard from './pages/admin/AdminDashboard';\nimport DocUpload  from './pages/admin/DocUpload';\nimport AdminCreatePerson from './pages/admin/AdminCreatePerson';\n//User\nimport HomeUser from \"./pages/user/HomeUser\";\n\n//function\nimport { currentUser } from './functions/auth';\n\n\n//Route\nimport UserRoute from './components/routes/UserRoute';\nimport AdminRoute from './components/routes/AdminRoute';\n\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  \n\n  //const idTokenResult = localStorage.token;\n  //console.log('APP.js', idTokenResult)\n\n  useEffect(() => {\n    const idTokenResult = localStorage.token;\n    if (idTokenResult){\n      currentUser(idTokenResult)\n        .then(res => {\n          console.log(res.data)\n          dispatch({\n            type:'LOGGED_IN_USER',\n            payload:{\n              name: res.data.name,\n              role: res.data.role,\n              token: idTokenResult\n            }\n          })\n        }).catch(err => {\n          console.log(err)\n        })\n    }\n    \n  }, [dispatch])\n\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/Register\" component={Register} />\n\n        <AdminRoute exact path=\"/home-admin\" component={AdminDashboard} />\n        <AdminRoute exact path=\"/admin/creat-person\" component={AdminCreatePerson} />\n        <AdminRoute exact path=\"/upload\" component={DocUpload} />\n        <UserRoute exact path=\"/home-user\" component={HomeUser} />\n\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}