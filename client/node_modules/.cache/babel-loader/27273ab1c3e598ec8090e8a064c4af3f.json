{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\user\\\\UserSide.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport CardDatas from '../../components/UserComponent/Card/CardDatas';\nimport NewCardDatas from '../../components/UserComponent/Card/NewCardDatas';\nimport CardPost from '../../components/UserComponent/Card/CardPost';\nimport Cards from '../../components/UserComponent/Card/Cards';\nimport SearchBox from '../../components/UserComponent/SearchBox/SearchBox';\nimport './userside.css';\nimport ReactPaginate from 'react-paginate';\nimport { AiOutlineInsertRowBelow, AiOutlineBlock } from 'react-icons/ai';\nimport { MdOutlineTableRows } from 'react-icons/md';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport th from 'date-fns/locale/th';\nimport { getPerson } from '../../functions/person';\nimport { toast } from 'react-toastify';\nimport { Table, Avatar, Image } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction UserSide() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [searchText, setSearchText] = useState('');\n  const [searchNo, setSearchNo] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  const [person, setPerson] = useState([]);\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  useEffect(() => {\n    loadPerson(user.token);\n  }, []);\n\n  const loadPerson = authtoken => {\n    getPerson(authtoken).then(res => {\n      setPerson(res.data);\n    }).catch(err => {\n      toast.error(err);\n      console.log(err);\n    });\n  };\n\n  registerLocale('th', th);\n\n  function onCardOpenClick(theCard) {\n    setSelectedCard(theCard);\n  }\n\n  function onCardCloseClick() {\n    setSelectedCard(null);\n  }\n\n  const filteredCards = person.filter(CardData => {\n    return CardData.title.includes(searchText);\n  });\n  const cardElements = filteredCards.map((CardData, index) => {\n    return /*#__PURE__*/_jsxDEV(Cards, {\n      CardData: CardData,\n      onCardClick: onCardOpenClick\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }, this);\n  });\n\n  function Items(_ref) {\n    let {\n      currentItems\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: currentItems && currentItems.map(cardElements => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cardElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false);\n  }\n\n  function PaginatedItems(_ref2) {\n    _s();\n\n    let {\n      itemsPerPage\n    } = _ref2;\n    // We start with an empty list of items.\n    const [currentItems, setCurrentItems] = useState(null);\n    const [pageCount, setPageCount] = useState(0); // Here we use item offsets; we could also use page offsets\n    // following the API or data you're working with.\n\n    const [itemOffset, setItemOffset] = useState(0);\n    useEffect(() => {\n      // Fetch items from another resources.\n      const endOffset = itemOffset + itemsPerPage;\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\n    }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n    const handlePageClick = event => {\n      const newOffset = event.selected * itemsPerPage % cardElements.length;\n      console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n      setItemOffset(newOffset);\n    };\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-grid\",\n        children: [/*#__PURE__*/_jsxDEV(Items, {\n          currentItems: currentItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n          breakLabel: \"...\",\n          nextLabel: \"Next\",\n          onPageChange: handlePageClick,\n          pageRangeDisplayed: 5,\n          pageCount: pageCount,\n          previousLabel: \"Previous\",\n          renderOnZeroPageCount: null,\n          containerClassName: \"paginationBttns\",\n          previousClassName: \"previousBttn\",\n          nextLinkClassName: \"nextBttn\",\n          disabledClassName: \"paginationDisabled\",\n          activeClassName: \"paginationActive\",\n          pageRangeDisplayed: 2,\n          marginPagesDisplayed: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n  _s(PaginatedItems, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n  let cardPost = null;\n\n  if (!!selectedCard) {\n    cardPost = /*#__PURE__*/_jsxDEV(CardPost, {\n      CardData: selectedCard,\n      onBgClick: onCardCloseClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searh\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search2\",\n        children: [\"\\u0E43\\u0E2A\\u0E48\\u0E04\\u0E33\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\", /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchText,\n          onValueChange: setSearchText,\n          placeholder: \"\\u0E04\\u0E33\\u0E04\\u0E49\\u0E19\\u0E2B\\u0E32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search3\",\n        children: [\"\\u0E40\\u0E25\\u0E02\\u0E17\\u0E35\\u0E48\\u0E2B\\u0E19\\u0E31\\u0E07\\u0E2A\\u0E37\\u0E2D\", /*#__PURE__*/_jsxDEV(SearchBox, {\n          value: searchNo,\n          onValueChange: setSearchNo,\n          placeholder: \"\\u0E40\\u0E25\\u0E02\\u0E17\\u0E35\\u0E48\\u0E2B\\u0E19\\u0E31\\u0E07\\u0E2A\\u0E37\\u0E2D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search4\",\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          elected: startDate,\n          onChange: date => setStartDate(date),\n          locale: \"th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chblog\",\n        children: [/*#__PURE__*/_jsxDEV(AiOutlineInsertRowBelow, {\n          color: \"#0093C6\",\n          fontSize: \"1.5em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(MdOutlineTableRows, {\n          color: \"#0093C6\",\n          fontSize: \"1.5em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaginatedItems, {\n      itemsPerPage: 12\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), cardPost]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(UserSide, \"MNogRWju7qtfCBRQlBkP/ihIHyo=\", true);\n\n_c = UserSide;\nexport default UserSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSide\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/user/UserSide.js"],"names":["React","useEffect","useState","CardDatas","NewCardDatas","CardPost","Cards","SearchBox","ReactPaginate","AiOutlineInsertRowBelow","AiOutlineBlock","MdOutlineTableRows","DatePicker","registerLocale","setDefaultLocale","th","getPerson","toast","Table","Avatar","Image","UserSide","selectedCard","setSelectedCard","searchText","setSearchText","searchNo","setSearchNo","startDate","setStartDate","Date","person","setPerson","user","useSelector","state","loadPerson","token","authtoken","then","res","data","catch","err","error","console","log","onCardOpenClick","theCard","onCardCloseClick","filteredCards","filter","CardData","title","includes","cardElements","map","index","Items","currentItems","PaginatedItems","itemsPerPage","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","Math","ceil","length","handlePageClick","event","newOffset","selected","cardPost","date"],"mappings":"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","sourcesContent":["import React, { useEffect, useState,  } from 'react'\r\nimport CardDatas from '../../components/UserComponent/Card/CardDatas'\r\nimport NewCardDatas from '../../components/UserComponent/Card/NewCardDatas';\r\nimport CardPost from '../../components/UserComponent/Card/CardPost';\r\nimport Cards from '../../components/UserComponent/Card/Cards';\r\nimport SearchBox from '../../components/UserComponent/SearchBox/SearchBox';\r\nimport './userside.css';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { AiOutlineInsertRowBelow, AiOutlineBlock } from 'react-icons/ai';\r\nimport { MdOutlineTableRows } from 'react-icons/md';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { registerLocale, setDefaultLocale } from  \"react-datepicker\";\r\nimport th from 'date-fns/locale/th';\r\n\r\nimport { getPerson } from '../../functions/person';\r\nimport { toast } from 'react-toastify';\r\nimport { Table, Avatar, Image } from 'antd';\r\n\r\n\r\nfunction UserSide() {\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchNo, setSearchNo] = useState('');\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  \r\n  const [person, setPerson] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }))\r\n  useEffect(() => {\r\n    loadPerson(user.token);\r\n   \r\n  }, [])\r\n\r\n  const loadPerson = (authtoken) => {\r\n    getPerson(authtoken)\r\n        .then((res) => {\r\n            setPerson(res.data)\r\n          \r\n        }).catch((err) => {\r\n            toast.error(err)\r\n            console.log(err)\r\n        })\r\n}\r\n\r\n\r\n \r\n\r\n\r\n  registerLocale('th', th)\r\n\r\n  function onCardOpenClick(theCard){\r\n    setSelectedCard(theCard);\r\n  }\r\n\r\n  function onCardCloseClick(){\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  const filteredCards = person.filter((CardData) => {\r\n      return CardData.title.includes(searchText);\r\n  })\r\n\r\n  const cardElements = filteredCards.map((CardData, index) => {\r\n      return <Cards key={index} CardData={CardData} onCardClick={onCardOpenClick}/>;\r\n  });\r\n\r\n  function Items({ currentItems }) {\r\n    return (\r\n      <>\r\n        {currentItems &&\r\n          currentItems.map((cardElements) => (\r\n            <div>\r\n              {cardElements}\r\n            </div>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  function PaginatedItems({ itemsPerPage }) {\r\n    // We start with an empty list of items.\r\n    const [currentItems, setCurrentItems] = useState(null);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    // Here we use item offsets; we could also use page offsets\r\n    // following the API or data you're working with.\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n  \r\n    useEffect(() => {\r\n \r\n  \r\n      // Fetch items from another resources.\r\n      const endOffset = itemOffset + itemsPerPage;\r\n      console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n      setCurrentItems(cardElements.slice(itemOffset, endOffset));\r\n      setPageCount(Math.ceil(cardElements.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n  \r\n    // Invoke when user click to request another page.\r\n    const handlePageClick = (event) => {\r\n      const newOffset = (event.selected * itemsPerPage) % cardElements.length;\r\n      console.log(\r\n        `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n      );\r\n      setItemOffset(newOffset);\r\n    };\r\n  \r\n    return (\r\n      <><div className=\"app-grid\">\r\n        <Items currentItems={currentItems} />\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"Next\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"Previous\"\r\n          renderOnZeroPageCount={null}\r\n          containerClassName={\"paginationBttns\"}\r\n          previousClassName={\"previousBttn\"}\r\n          nextLinkClassName={\"nextBttn\"}\r\n          disabledClassName={\"paginationDisabled\"}\r\n          activeClassName={\"paginationActive\"}\r\n          pageRangeDisplayed={2}\r\n          marginPagesDisplayed={2}\r\n        />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n   \r\n  \r\n\r\n  let cardPost = null;\r\n  if(!!selectedCard){\r\n    cardPost = <CardPost CardData={selectedCard} onBgClick={onCardCloseClick}/>\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"searh\">\r\n        <div className=\"search2\">ใส่คำค้นหา<SearchBox value={searchText} onValueChange={setSearchText} placeholder=\"คำค้นหา\"/></div>\r\n        <div className=\"search3\">เลขที่หนังสือ<SearchBox value={searchNo} onValueChange={setSearchNo} placeholder=\"เลขที่หนังสือ\"/></div>\r\n        <div className=\"search4\"><DatePicker elected={startDate} onChange={(date) => setStartDate(date)} locale=\"th\" /></div>\r\n        <div className=\"chblog\"><AiOutlineInsertRowBelow color=\"#0093C6\" fontSize=\"1.5em\"/>\r\n         <MdOutlineTableRows color=\"#0093C6\" fontSize=\"1.5em\"/></div>\r\n      </div> \r\n        <PaginatedItems itemsPerPage={12} />\r\n      {cardPost}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default UserSide\r\n"]},"metadata":{},"sourceType":"module"}