{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\admin\\\\Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Form, Input, Button, Checkbox, Col, Card, DatePicker, InputNumber, Divider } from 'antd';\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport './upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = () => {\n  _s();\n\n  const [expand, setExpand] = useState(false);\n  const [form] = Form.useForm();\n\n  const getFields = () => {\n    const count = expand ? 10 : 6;\n    const children = [];\n\n    for (let i = 0; i < count; i++) {\n      children.push( /*#__PURE__*/_jsxDEV(Col, {\n        span: 8,\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: `field-${i}`,\n          label: `Field ${i}`,\n          rules: [{\n            required: true,\n            message: 'Input something!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this));\n    }\n\n    return children;\n  };\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"advanced_search\",\n    className: \"ant-advanced-search-form\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: 24,\n      children: getFields()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        span: 24,\n        style: {\n          textAlign: 'right'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            margin: '0 8px'\n          },\n          onClick: () => {\n            form.resetFields();\n          },\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          style: {\n            fontSize: 12\n          },\n          onClick: () => {\n            setExpand(!expand);\n          },\n          children: [expand ? /*#__PURE__*/_jsxDEV(UpOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 42\n          }, this), \" Collapse\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Upload, \"If1JphLZmgZzzbXoin38fah9NIg=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/admin/Upload.js"],"names":["React","useState","Row","Form","Input","Button","Checkbox","Col","Card","DatePicker","InputNumber","Divider","DownOutlined","UpOutlined","Upload","expand","setExpand","form","useForm","getFields","count","children","i","push","required","message","onFinish","values","console","log","textAlign","margin","resetFields","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row,\r\n         Form, \r\n         Input, \r\n         Button, \r\n         Checkbox, \r\n         Col, \r\n         Card, \r\n         DatePicker, \r\n         InputNumber,\r\n         Divider\r\n         \r\n} from 'antd';\r\n\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\r\n\r\nimport './upload.css'\r\nconst Upload = () => {\r\n    \r\n    const [expand, setExpand] = useState(false);\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const getFields = () => {\r\n        const count = expand ? 10 : 6;\r\n        const children = [];\r\n\r\n        for (let i = 0; i < count; i++) {\r\n          children.push(\r\n            <Col span={8} key={i}>\r\n              <Form.Item\r\n                name={`field-${i}`}\r\n                label={`Field ${i}`}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: 'Input something!',\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"placeholder\" />\r\n              </Form.Item>\r\n            </Col>,\r\n          );\r\n        }\r\n        return children;\r\n      };\r\n\r\n\r\n    const onFinish = (values) => {\r\n        console.log('Received values of form: ', values);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n    <Form\r\n        form={form}\r\n        name=\"advanced_search\"\r\n        className=\"ant-advanced-search-form\"\r\n        onFinish={onFinish}\r\n    >\r\n        <Row gutter={24}>{getFields()}</Row>\r\n        <Row>\r\n          <Col span={24} style={{ textAlign: 'right' }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n\r\n            <Button\r\n              style={{ margin: '0 8px' }}\r\n              onClick={() => {\r\n                form.resetFields();\r\n              }}\r\n            >Clear\r\n            </Button>\r\n\r\n            <a\r\n              style={{ fontSize: 12 }}\r\n              onClick={() => {\r\n                setExpand(!expand);\r\n              }}\r\n            >\r\n              {expand ? <UpOutlined /> : <DownOutlined />} Collapse\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n    </Form> \r\n\r\n\r\n\r\n        \r\n\r\n        \r\n    )\r\n\r\n\r\n}\r\nexport default Upload\r\n\r\n"]},"metadata":{},"sourceType":"module"}