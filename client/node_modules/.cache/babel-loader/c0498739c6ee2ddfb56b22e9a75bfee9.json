{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\admin\\\\AdminCreatePerson.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DocUpload from './DocUpload';\nimport AdminNav from '../../layout/AdminNav';\nimport { useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Table, Tag, Space } from 'antd';\nimport { createPerson, getPerson } from '../../functions/person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AdminCreatePerson = () => {\n  _s();\n\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  const [name, setName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [person, setPerson] = useState([]);\n  useEffect(() => {\n    loadPerson(user.token);\n  }, []);\n\n  const loadPerson = authtoken => {\n    getPerson(authtoken).then(res => {\n      setPerson(res.data);\n    }).catch(err => {\n      toast.error(err);\n      console.log(err);\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setLoading(true);\n    createPerson({\n      name\n    }, user.token).then(res => {\n      loadPerson(user.token);\n      setLoading(false);\n      toast.success('Create ' + res.data.name + ' Success ');\n    }).catch(err => {\n      setLoading(false);\n      toast.error(err.response);\n    });\n  };\n\n  const columns = [{\n    title: 'ชื่อ',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Actions',\n    dataIndex: 'name',\n    key: 'name'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Admin CreatePerson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              autoFocus: true,\n              required: true,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          dataSource: person\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminCreatePerson, \"HZgywtN/fIKV1g5f/i4jIoeuA6U=\", false, function () {\n  return [useSelector];\n});\n\n_c = AdminCreatePerson;\nexport default AdminCreatePerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCreatePerson\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/admin/AdminCreatePerson.js"],"names":["React","useState","useEffect","DocUpload","AdminNav","useSelector","toast","Table","Tag","Space","createPerson","getPerson","AdminCreatePerson","user","state","name","setName","loading","setLoading","person","setPerson","loadPerson","token","authtoken","then","res","data","catch","err","error","console","log","onSubmit","e","preventDefault","success","response","columns","title","dataIndex","key","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport DocUpload from './DocUpload';\r\nimport AdminNav from '../../layout/AdminNav';\r\nimport { useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Table, Tag, Space } from 'antd';\r\n\r\nimport { createPerson, getPerson } from '../../functions/person';\r\n\r\nconst AdminCreatePerson = () => {\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [person, setPerson] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadPerson(user.token);\r\n    }, [])\r\n    const loadPerson = (authtoken) => {\r\n        getPerson(authtoken)\r\n            .then((res) => {\r\n                setPerson(res.data)\r\n            }).catch((err) => {\r\n                toast.error(err)\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        createPerson({ name }, user.token)\r\n            .then(res=>{\r\n                loadPerson(user.token);\r\n                setLoading(false)\r\n                toast.success('Create '+ res.data.name + ' Success ')\r\n            }).catch(err=>{\r\n                setLoading(false)\r\n                toast.error(err.response)\r\n            })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'ชื่อ',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        },\r\n        {\r\n            title: 'Actions',\r\n            dataIndex: 'name',\r\n            key: 'name'\r\n        }\r\n    ]\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-2\">\r\n                    <AdminNav/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    {loading\r\n                    ? <h4>Loading ...</h4>                         \r\n                    : <h4>Admin CreatePerson</h4>}\r\n                    \r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>ชื่อ</label>\r\n                            <input type=\"text\"\r\n                                className=\"form-control\"\r\n                                autoFocus\r\n                                required\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n\r\n\r\n\r\n                        </div>\r\n                        <button className=\"btn btn-outline-primary\">Save</button>\r\n                    </form>\r\n                    <hr />\r\n                    <Table columns={columns} dataSource={person} />\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCreatePerson\r\n"]},"metadata":{},"sourceType":"module"}