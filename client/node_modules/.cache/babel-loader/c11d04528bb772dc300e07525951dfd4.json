{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\admin\\\\DocUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Form, Input, Button, Checkbox, Col, Card, DatePicker, InputNumber, Divider, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { uploadData } from '../../functions/upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DocUpload = () => {\n  _s();\n\n  const props = {\n    name: 'file',\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    headers: {\n      authorization: 'authorization-text'\n    },\n\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n\n  };\n  const {\n    user\n  } = useSelector(state => ({ ...state\n  }));\n  console.log('user', user);\n\n  const onFinish = values => {\n    //console.log('Success:', values);\n    uploadData(values, user.token).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E40\\u0E25\\u0E02\\u0E23\\u0E31\\u0E1A\",\n            name: \"ulInID\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\",\n            name: \"ulDate\",\n            rules: [{\n              required: true,\n              message: 'กรุณากรอกวันที่!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E17\\u0E35\\u0E48\",\n            name: \"ulLocate\",\n            rules: [{\n              required: true,\n              message: 'ระบุที่'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E25\\u0E07\\u0E27\\u0E31\\u0E19\\u0E17\\u0E35\\u0E48\",\n            name: \"ulDateGen\",\n            rules: [{\n              required: true\n            }],\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E08\\u0E32\\u0E01\",\n            name: \"ulFrom\",\n            rules: [{\n              required: true,\n              message: \"ระบุจาก\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E16\\u0E36\\u0E07\",\n            name: \"ulTo\",\n            rules: [{\n              required: true,\n              message: \"ระบุถึง\"\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E40\\u0E23\\u0E37\\u0E48\\u0E2D\\u0E07\",\n            name: \"ulTitle\",\n            rules: [{\n              required: true,\n              message: 'ระบุเรื่อง'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(DocUpload, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n\n_c = DocUpload;\nexport default DocUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocUpload\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/admin/DocUpload.js"],"names":["React","useState","Row","Form","Input","Button","Checkbox","Col","Card","DatePicker","InputNumber","Divider","Upload","message","UploadOutlined","useSelector","uploadData","DocUpload","props","name","action","headers","authorization","onChange","info","file","status","console","log","fileList","success","error","user","state","onFinish","values","token","then","res","catch","err","onFinishFailed","errorInfo","span","remember","required","offset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EACSC,IADT,EAESC,KAFT,EAGSC,MAHT,EAISC,QAJT,EAKSC,GALT,EAMSC,IANT,EAOSC,UAPT,EAQSC,WART,EASSC,OATT,EAUSC,MAVT,EAWSC,OAXT,QAaO,MAbP;AAeA,SAASC,cAAT,QAA+B,mBAA/B;AAMA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,UAAT,QAA2B,wBAA3B;;;;AAUA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAGpB,QAAMC,KAAK,GAAG;AACVC,IAAAA,IAAI,EAAE,MADI;AAEVC,IAAAA,MAAM,EAAE,kDAFE;AAGVC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAE;AADR,KAHC;;AAMVC,IAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,UAAIA,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,WAAzB,EAAsC;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,IAAjB,EAAuBD,IAAI,CAACK,QAA5B;AACD;;AACD,UAAIL,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/Bb,QAAAA,OAAO,CAACiB,OAAR,CAAiB,GAAEN,IAAI,CAACC,IAAL,CAAUN,IAAK,6BAAlC;AACD,OAFD,MAEO,IAAIK,IAAI,CAACC,IAAL,CAAUC,MAAV,KAAqB,OAAzB,EAAkC;AACvCb,QAAAA,OAAO,CAACkB,KAAR,CAAe,GAAEP,IAAI,CAACC,IAAL,CAAUN,IAAK,sBAAhC;AACD;AACF;;AAfS,GAAd;AA4BA,QAAM;AAAEa,IAAAA;AAAF,MAAWjB,WAAW,CAAEkB,KAAD,KAAY,EAAE,GAAGA;AAAL,GAAZ,CAAD,CAA5B;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;;AAEA,QAAME,QAAQ,GAAIC,MAAD,IAAY;AACzB;AACAnB,IAAAA,UAAU,CAACmB,MAAD,EAASH,IAAI,CAACI,KAAd,CAAV,CACKC,IADL,CACWC,GAAG,IAAI;AACVX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAZ;AACH,KAHL,EAGOC,KAHP,CAGcC,GAAG,IAAI;AACbb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,KALL;AAMH,GARD;;AAUA,QAAMC,cAAc,GAAIC,SAAD,IAAe;AAClCf,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBc,SAAvB;AACH,GAFD;;AAMA,sBAEA;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,QAAb;AAAA,6BACI,QAAC,IAAD;AAAA,+BAQI,QAAC,IAAD;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,QAAQ,EAAE;AACNC,YAAAA,IAAI,EAAE;AADA,WAFd;AAKI,UAAA,UAAU,EAAE;AACRA,YAAAA,IAAI,EAAE;AADE,WALhB;AAQI,UAAA,aAAa,EAAE;AACXC,YAAAA,QAAQ,EAAE;AADC,WARnB;AAWI,UAAA,QAAQ,EAAEV,QAXd;AAYI,UAAA,cAAc,EAAEO,cAZpB;AAaI,UAAA,YAAY,EAAC,KAbjB;AAAA,kCAiBI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,sCADV;AAEI,YAAA,IAAI,EAAC,QAFT;AAII,YAAA,KAAK,EAAE,CACH;AACII,cAAAA,QAAQ,EAAE;AADd,aADG,CAJX;AAAA,mCAUI,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eA8BI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,sCADV;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIA,cAAAA,QAAQ,EAAE,IADd;AAEIhC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AAAA,mCAUI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBA9BJ,eA4CI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,oBADV;AAEI,YAAA,IAAI,EAAC,UAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIgC,cAAAA,QAAQ,EAAE,IADd;AAEIhC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AAAA,mCAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBA5CJ,eA0DI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,kDADV;AAEI,YAAA,IAAI,EAAC,WAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIgC,cAAAA,QAAQ,EAAE;AADd,aADG,CAHX;AAAA,mCASI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,kBA1DJ,eAsEI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,oBADV;AAEI,YAAA,IAAI,EAAC,QAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIA,cAAAA,QAAQ,EAAE,IADd;AAEIhC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AAAA,mCAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAtEJ,eAmFI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,oBADV;AAEI,YAAA,IAAI,EAAC,MAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIgC,cAAAA,QAAQ,EAAE,IADd;AAEIhC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AAAA,mCAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAnFJ,eAiGI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,KAAK,EAAC,sCADV;AAEI,YAAA,IAAI,EAAC,SAFT;AAGI,YAAA,KAAK,EAAE,CACH;AACIgC,cAAAA,QAAQ,EAAE,IADd;AAEIhC,cAAAA,OAAO,EAAE;AAFb,aADG,CAHX;AAAA,mCAUI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,kBAjGJ,eAgHI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,UAAU,EAAE;AACJiC,cAAAA,MAAM,EAAE,CADJ;AAEJH,cAAAA,IAAI,EAAE;AAFF,aADhB;AAAA,mCAMI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,SAAb;AAAuB,cAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,kBAhHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBAFA;AA8IH,CAhMD;;GAAM1B,S;UA+BeF,W;;;KA/BfE,S;AAkMN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Row,\r\n         Form, \r\n         Input, \r\n         Button, \r\n         Checkbox, \r\n         Col, \r\n         Card, \r\n         DatePicker, \r\n         InputNumber,\r\n         Divider,\r\n         Upload,\r\n         message\r\n\r\n} from 'antd';\r\n\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { uploadData } from '../../functions/upload';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DocUpload = () => {\r\n\r\n\r\n    const props = {\r\n        name: 'file',\r\n        action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n        headers: {\r\n          authorization: 'authorization-text',\r\n        },\r\n        onChange(info) {\r\n          if (info.file.status !== 'uploading') {\r\n            console.log(info.file, info.fileList);\r\n          }\r\n          if (info.file.status === 'done') {\r\n            message.success(`${info.file.name} file uploaded successfully`);\r\n          } else if (info.file.status === 'error') {\r\n            message.error(`${info.file.name} file upload failed.`);\r\n          }\r\n        },\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const { user } = useSelector((state) => ({ ...state }))\r\n    console.log('user', user);\r\n\r\n    const onFinish = (values) => {\r\n        //console.log('Success:', values);\r\n        uploadData(values, user.token)\r\n            .then( res => {\r\n                console.log(res);\r\n            }).catch( err => {\r\n                console.log(err);\r\n            })\r\n    };\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    \r\n\r\n    return (\r\n\r\n    <>  \r\n        <Row justify=\"center\">\r\n            <Card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                \r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{\r\n                        span: 8,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 16,\r\n                    }}\r\n                    initialValues={{\r\n                        remember: true,\r\n                    }}\r\n                    onFinish={onFinish}\r\n                    onFinishFailed={onFinishFailed}\r\n                    autoComplete=\"off\"\r\n                >\r\n            \r\n\r\n                    <Form.Item\r\n                        label=\"เลขรับ\"\r\n                        name=\"ulInID\"\r\n                       \r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                            ]}\r\n                    >\r\n                        <Input type=\"number\"/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"วันที่\"\r\n                        name=\"ulDate\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'กรุณากรอกวันที่!',\r\n                            },\r\n                            ]}\r\n                    >\r\n                        <DatePicker />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"ที่\"\r\n                        name=\"ulLocate\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'ระบุที่',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"ลงวันที่\"\r\n                        name=\"ulDateGen\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                            },\r\n                        ]}\r\n                >\r\n                        <DatePicker />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"จาก\"\r\n                        name=\"ulFrom\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"ระบุจาก\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"ถึง\"\r\n                        name=\"ulTo\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: \"ระบุถึง\",\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        label=\"เรื่อง\"\r\n                        name=\"ulTitle\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'ระบุเรื่อง',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                                        \r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                                offset: 8,\r\n                                span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n\r\n            </Card>\r\n        </Row>\r\n    </>             \r\n        \r\n    );\r\n}\r\n\r\nexport default DocUpload;\r\n\r\n"]},"metadata":{},"sourceType":"module"}