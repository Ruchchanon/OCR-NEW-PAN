{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\components\\\\routes\\\\LoadingToRedirect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { currentUser } from \"../../functions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingToRedirect = () => {\n  _s();\n\n  const [count, setCount] = useState(3);\n  const history = useHistory();\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(currentCount => --currentCount);\n    }, 1000); // redirect if ..\n\n    count === 0 && history.push('/');\n    return () => clearInterval(interval);\n  }, [count, history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5 text-center text-danger\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Redirect in \", count, \" second\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoadingToRedirect, \"YYnsDfeD7GGP/oyRgiQgJko6FOU=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoadingToRedirect;\nexport default LoadingToRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingToRedirect\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/components/routes/LoadingToRedirect.js"],"names":["React","useState","useEffect","useHistory","toast","currentUser","LoadingToRedirect","count","setCount","history","interval","setInterval","currentCount","push","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,SAASC,WAAT,QAA4B,sBAA5B;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMQ,OAAO,GAAGN,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BH,MAAAA,QAAQ,CAAEI,YAAD,IAAkB,EAAEA,YAArB,CAAR;AACH,KAF2B,EAEzB,IAFyB,CAA5B,CADY,CAIZ;;AACAL,IAAAA,KAAK,KAAK,CAAV,IAAeE,OAAO,CAACI,IAAR,CAAa,GAAb,CAAf;AACA,WAAO,MAAMC,aAAa,CAACJ,QAAD,CAA1B;AACH,GAPQ,EAON,CAACH,KAAD,EAAQE,OAAR,CAPM,CAAT;AASA,sBAGI;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA,2BACI;AAAA,iCAAiBF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHJ;AAOH,CApBD;;GAAMD,iB;UAEcH,U;;;KAFdG,iB;AAsBN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { currentUser } from \"../../functions/auth\";\r\n\r\nconst LoadingToRedirect = () => {\r\n    const [count, setCount] = useState(3);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCount((currentCount) => --currentCount);\r\n        }, 1000)\r\n        // redirect if ..\r\n        count === 0 && history.push('/');\r\n        return () => clearInterval(interval)\r\n    }, [count, history])\r\n\r\n    return (\r\n       \r\n\r\n        <div className=\"container p-5 text-center text-danger\">\r\n            <h1>Redirect in {count} second</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadingToRedirect\r\n"]},"metadata":{},"sourceType":"module"}