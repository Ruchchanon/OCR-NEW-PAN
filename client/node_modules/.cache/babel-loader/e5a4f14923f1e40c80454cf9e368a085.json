{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-New-Kop\\\\client\\\\src\\\\pages\\\\admin\\\\layout\\\\components\\\\sidebar\\\\navItem\\\\NavItemHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport style from './navItem.module.css';\nimport { ChevronDownIcon } from '@heroicons/react/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst resolveLinkPath = (childTo, parentTo) => `${parentTo}/${childTo}`;\n\nconst NavItemHeader = props => {\n  _s();\n\n  const {\n    item\n  } = props;\n  const {\n    label,\n    Icon,\n    to: headerToPath,\n    children\n  } = item;\n  const location = useLocation();\n  const [expanded, setExpand] = useState(location.pathname.includes(headerToPath));\n\n  const onExpandChange = e => {\n    e.preventDefault();\n    setExpand(expanded => !expanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${style.navItem} ${style.navItemHeaderButton}`,\n      onClick: onExpandChange,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: style.navIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: style.navLabel,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChevronDownIcon, {\n        className: `${style.navItemHeaderChevron} ${expanded && style.chevronExpanded}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), expanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.navChildrenBlock,\n      children: children.map((item, index) => {\n        const key = `${item.label}-${index}`;\n        const {\n          label,\n          Icon,\n          children\n        } = item;\n\n        if (children) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NavItemHeader, {\n              item: { ...item,\n                to: resolveLinkPath(item.to, props.item.to)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(NavLink, {\n          to: resolveLinkPath(item.to, props.item.to),\n          className: style.navItem,\n          activeClassName: style.activeNavItem,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            className: style.navIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: style.navLabel,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NavItemHeader, \"iK3XKxBQrChl7modC224+JccYuk=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavItemHeader;\nexport default NavItemHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavItemHeader\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-New-Kop/client/src/pages/admin/layout/components/sidebar/navItem/NavItemHeader.jsx"],"names":["React","useState","NavLink","useLocation","style","ChevronDownIcon","resolveLinkPath","childTo","parentTo","NavItemHeader","props","item","label","Icon","to","headerToPath","children","location","expanded","setExpand","pathname","includes","onExpandChange","e","preventDefault","navItem","navItemHeaderButton","navIcon","navLabel","navItemHeaderChevron","chevronExpanded","navChildrenBlock","map","index","key","activeNavItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport style from './navItem.module.css';\r\nimport { ChevronDownIcon } from '@heroicons/react/outline';\r\n\r\nconst resolveLinkPath = (childTo, parentTo) => `${parentTo}/${childTo}`;\r\n\r\nconst NavItemHeader = props => {\r\n  const { item } = props;\r\n  const { label, Icon, to: headerToPath, children } = item;\r\n  const location = useLocation();\r\n\r\n  const [expanded, setExpand] = useState(\r\n    location.pathname.includes(headerToPath)\r\n  );\r\n\r\n  const onExpandChange = e => {\r\n    e.preventDefault();\r\n    setExpand(expanded => !expanded);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className={`${style.navItem} ${style.navItemHeaderButton}`}\r\n        onClick={onExpandChange}\r\n      >\r\n        <Icon className={style.navIcon} />\r\n        <span className={style.navLabel}>{label}</span>\r\n        <ChevronDownIcon\r\n          className={`${style.navItemHeaderChevron} ${\r\n            expanded && style.chevronExpanded\r\n          }`}\r\n        />\r\n      </button>\r\n\r\n      {expanded && (\r\n        <div className={style.navChildrenBlock}>\r\n          {children.map((item, index) => {\r\n            const key = `${item.label}-${index}`;\r\n\r\n            const { label, Icon, children } = item;\r\n\r\n            if (children) {\r\n              return (\r\n                <div key={key}>\r\n                  <NavItemHeader\r\n                    item={{\r\n                      ...item,\r\n                      to: resolveLinkPath(item.to, props.item.to),\r\n                    }}\r\n                  />\r\n                </div>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <NavLink\r\n                key={key}\r\n                to={resolveLinkPath(item.to, props.item.to)}\r\n                className={style.navItem}\r\n                activeClassName={style.activeNavItem}\r\n              >\r\n                <Icon className={style.navIcon} />\r\n                <span className={style.navLabel}>{label}</span>\r\n              </NavLink>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavItemHeader;\r\n"]},"metadata":{},"sourceType":"module"}