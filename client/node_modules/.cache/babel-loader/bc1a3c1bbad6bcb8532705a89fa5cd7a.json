{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\false\\\\Desktop\\\\OCR-FullProject\\\\client\\\\src\\\\pages\\\\auth\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Form, Input, Button, Row, Col, Card } from 'antd';\nimport \"./login.css\";\nimport { loginHandler } from '../../functions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const roleBaseRedirect = role => {\n    if (role === 'admin') {\n      history.push('/home-admin');\n    } else {\n      history.push('/home-user');\n    }\n  };\n\n  const onFinish = values => {\n    console.log('Success', values);\n    loginHandler(values).then(res => {\n      dispatch({\n        type: 'LOGGED_IN_USER',\n        payload: {\n          token: res.data.token,\n          username: res.data.payload.user.name,\n          role: res.data.payload.user.role\n        }\n      });\n      localStorage.setItem('token', res.data.token);\n      roleBaseRedirect(res.data.payload.user.role);\n      console.log(res.data.payload.user.role); //alert(res.data)\n      //history.push('/login')\n    }).catch(err => {\n      console.log(err.response.data);\n      alert(err.response.data);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    justify: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          name: \"basic\",\n          labelCol: {\n            span: 8\n          },\n          wrapperCol: {\n            span: 16\n          },\n          initialValues: {\n            remember: true\n          },\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\",\n            name: \"name\",\n            rules: [{\n              required: true,\n              message: 'Please input your username!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your password!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n            wrapperCol: {\n              offset: 8,\n              span: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/false/Desktop/OCR-FullProject/client/src/pages/auth/Login.js"],"names":["React","useDispatch","Form","Input","Button","Row","Col","Card","loginHandler","Login","history","dispatch","roleBaseRedirect","role","push","onFinish","values","console","log","then","res","type","payload","token","data","username","user","name","localStorage","setItem","catch","err","response","alert","onFinishFailed","errorInfo","span","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Form, \r\n    Input, \r\n    Button, \r\n    Row,\r\n    Col,\r\n    Card\r\n} from 'antd';\r\nimport \"./login.css\";\r\n\r\nimport { loginHandler } from '../../functions/auth';\r\n\r\nconst Login = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const roleBaseRedirect = (role) => {\r\n        if(role === 'admin') {\r\n            history.push('/home-admin')\r\n        } else {\r\n            history.push('/home-user')\r\n        }\r\n    }\r\n\r\n\r\n    const onFinish = (values) => {\r\n            \r\n            console.log('Success', values);\r\n            loginHandler(values)\r\n            .then(res => {\r\n                dispatch({\r\n                    type:'LOGGED_IN_USER',\r\n                    payload:{\r\n                        token: res.data.token,\r\n                        username: res.data.payload.user.name,\r\n                        role: res.data.payload.user.role\r\n                    }\r\n                })\r\n                localStorage.setItem('token',res.data.token)\r\n                roleBaseRedirect(res.data.payload.user.role)\r\n                console.log(res.data.payload.user.role)\r\n                //alert(res.data)\r\n                //history.push('/login')\r\n            }).catch(err => {\r\n                console.log(err.response.data)\r\n                alert(err.response.data)\r\n            })\r\n          \r\n        };\r\n    \r\n        \r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n\r\n        <Row justify=\"center\">\r\n            <Col>\r\n                <Card>\r\n                    <Form    \r\n                                   \r\n                        name=\"basic\"\r\n                        labelCol={{\r\n                            span: 8,\r\n                        }}\r\n                        wrapperCol={{\r\n                            span: 16,\r\n                        }}\r\n                        initialValues={{\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                        >\r\n                    <Form.Item\r\n                    \r\n                    \r\n                    >\r\n\r\n\r\n                    </Form.Item>\r\n                    \r\n\r\n                    \r\n                    <Form.Item\r\n                        label=\"ชื่อผู้ใช้\"\r\n                        name=\"name\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your username!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"รหัสผ่าน\"\r\n                        name=\"password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n  \r\n\r\n                    <Form.Item\r\n                        wrapperCol={{\r\n                        offset: 8,\r\n                        span: 16,\r\n                        }}\r\n                    >\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}